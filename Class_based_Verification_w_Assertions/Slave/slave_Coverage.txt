Coverage Report by instance with details

=================================================================================
=== Instance: /slave_tb/DUT/slave_sva_inst
=== Design Unit: work.slave_sva
=================================================================================

Assertion Coverage:
    Assertions                      19        19         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/slave_tb/DUT/slave_sva_inst/assertion_reset_asserted
                     slave_sva.sv(181)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_SS_inactive
                     slave_sva.sv(184)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_CHK_first
                     slave_sva.sv(187)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_CHK_WR
                     slave_sva.sv(190)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_CHK_RD
                     slave_sva.sv(193)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MOSI_wr
                     slave_sva.sv(196)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MOSI_rd
                     slave_sva.sv(199)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MOSI_rd_add
                     slave_sva.sv(202)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MOSI_rd_data
                     slave_sva.sv(205)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_no_add_add
                     slave_sva.sv(208)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_no_data_data
                     slave_sva.sv(211)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx
                     slave_sva.sv(214)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_wr
                     slave_sva.sv(217)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_rd_add
                     slave_sva.sv(220)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_rd_data
                     slave_sva.sv(223)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_tx
                     slave_sva.sv(226)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_chk
                     slave_sva.sv(229)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_tx
                     slave_sva.sv(232)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MISO_rd_only
                     slave_sva.sv(235)                  0          1

Directive Coverage:
    Directives                      19        19         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/slave_tb/DUT/slave_sva_inst/cover_reset_asserted 
                                         slave_sva Verilog  SVA  slave_sva.sv(182)
                                                                              15504 Covered   
/slave_tb/DUT/slave_sva_inst/cover_SS_inactive 
                                         slave_sva Verilog  SVA  slave_sva.sv(185)
                                                                              51426 Covered   
/slave_tb/DUT/slave_sva_inst/cover_CHK_first 
                                         slave_sva Verilog  SVA  slave_sva.sv(188)
                                                                              51399 Covered   
/slave_tb/DUT/slave_sva_inst/cover_CHK_WR 
                                         slave_sva Verilog  SVA  slave_sva.sv(191)
                                                                              25370 Covered   
/slave_tb/DUT/slave_sva_inst/cover_CHK_RD 
                                         slave_sva Verilog  SVA  slave_sva.sv(194)
                                                                              25422 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MOSI_wr 
                                         slave_sva Verilog  SVA  slave_sva.sv(197)
                                                                              25116 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MOSI_rd 
                                         slave_sva Verilog  SVA  slave_sva.sv(200)
                                                                              25162 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MOSI_rd_add 
                                         slave_sva Verilog  SVA  slave_sva.sv(203)
                                                                              185821 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MOSI_rd_data 
                                         slave_sva Verilog  SVA  slave_sva.sv(206)
                                                                              93782 Covered   
/slave_tb/DUT/slave_sva_inst/cover_no_add_add 
                                         slave_sva Verilog  SVA  slave_sva.sv(209)
                                                                              11247 Covered   
/slave_tb/DUT/slave_sva_inst/cover_no_data_data 
                                         slave_sva Verilog  SVA  slave_sva.sv(212)
                                                                              11275 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx    slave_sva Verilog  SVA  slave_sva.sv(215)
                                                                              47516 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_wr slave_sva Verilog  SVA  slave_sva.sv(218)
                                                                              25519 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_rd_add 
                                         slave_sva Verilog  SVA  slave_sva.sv(221)
                                                                              11562 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_rd_data 
                                         slave_sva Verilog  SVA  slave_sva.sv(224)
                                                                              11284 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_tx slave_sva Verilog  SVA  slave_sva.sv(227)
                                                                              11281 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_chk 
                                         slave_sva Verilog  SVA  slave_sva.sv(230)
                                                                              204625 Covered   
/slave_tb/DUT/slave_sva_inst/cover_tx    slave_sva Verilog  SVA  slave_sva.sv(233)
                                                                              11275 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MISO_rd_only 
                                         slave_sva Verilog  SVA  slave_sva.sv(236)
                                                                              531474 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       2         2         0   100.00%

================================Statement Details================================

Statement Coverage for instance /slave_tb/DUT/slave_sva_inst --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_sva.sv
    1                                                module slave_sva(MOSI,SS_n,clk,rst_n,tx_valid,tx_data,rx_data,rx_valid,MISO,cs,ns);
    2                                                
    3                                                	//User-defined data_types and Parameters 
    4                                                	typedef enum logic [2:0] {IDLE, READ_DATA, READ_ADD, CHK_CMD, WRITE, WAIT_WR, WAIT_RD, WAIT_RD2} state_e;
    5                                                	parameter ADDR_SIZE = 8;
    6                                                
    7                                                	//I/O Ports of DUT
    8                                                	input clk, rst_n, SS_n, MOSI, tx_valid, rx_valid, MISO;
    9                                                	input [ADDR_SIZE-1:0] tx_data;
    10                                               	input [ADDR_SIZE+1:0] rx_data;
    11                                               
    12                                               	//Internal Signals of DUT
    13                                               	input [2:0] cs, ns;
    14                                               
    15                                               	//For Visual Clarity
    16                                               	state_e cs_sva, ns_sva;
    17              1                     253566     	assign cs_sva = state_e'(cs);
    18              1                     308246     	assign ns_sva = state_e'(ns);

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         78        78         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /slave_tb/DUT/slave_sva_inst --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                           cs[0-2]           1           1                              100.00 
                                            cs_sva               ENUM type       Value       Count 
                                                                      IDLE       20002      100.00 
                                                                 READ_DATA           1      100.00 
                                                                  READ_ADD           1      100.00 
                                                                   CHK_CMD       20002      100.00 
                                                                     WRITE       20000      100.00 
                                                                   WAIT_WR       20000      100.00 
                                                                   WAIT_RD           2      100.00 
                                                                  WAIT_RD2           2      100.00 
                                           ns[0-2]           1           1                              100.00 
                                            ns_sva               ENUM type       Value       Count 
                                                                      IDLE       22497      100.00 
                                                                 READ_DATA           1      100.00 
                                                                  READ_ADD           1      100.00 
                                                                   CHK_CMD       22495      100.00 
                                                                     WRITE       20000      100.00 
                                                                   WAIT_WR       20001      100.00 
                                                                   WAIT_RD        9974      100.00 
                                                                  WAIT_RD2           2      100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         47 
Toggled Node Count   =         47 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (78 of 78 bins)

=================================================================================
=== Instance: /slave_tb/DUT
=== Design Unit: work.slave
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        59        59         0   100.00%

================================Branch Details================================

Branch Coverage for instance /slave_tb/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave.v
------------------------------------IF Branch------------------------------------
    145                                   315478     Count coming in to IF
    145             1                      12159     		if(~rst_n)	begin
    148             1                     303319     		else	begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    154                                   624621     Count coming in to CASE
    155             1                     127120     			IDLE:
    162             1                      68358     			READ_DATA:
    169             1                      69053     			READ_ADD:
    176             1                      89525     			CHK_CMD:
    182             1                      30368     			WAIT_WR:
    185             1                      31164     			WAIT_RD:
    188             1                      40470     			WAIT_RD2:
    195             1                     168562     			WRITE:
    203             1                          1     			default: ns <= IDLE;
Branch totals: 9 hits of 9 branches = 100.00%

------------------------------------IF Branch------------------------------------
    156                                   127120     Count coming in to IF
    156             1                      58482     				if(SS_n)		begin
    159             1                      68638     				else	begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    163                                    68358     Count coming in to IF
    163             1                      11526     				if(SS_n) 	begin
    166             1                         21     				else if( start_to_take )	begin
                                           56811     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    170                                    69053     Count coming in to IF
    170             1                      57346     				if(~SS_n && start_to_give)	begin
    173             1                      11589     				else if(SS_n)	begin
                                             118     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    177                                    89525     Count coming in to IF
    177             1                       1303     				if(SS_n) ns <= IDLE;
    178             1                      88222     				else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    179                                    88222     Count coming in to IF
    179             1                      44367     					if(MOSI) ns <= WAIT_RD;
    180             1                      43855     					else ns <= WAIT_WR;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    183                                    30368     Count coming in to IF
    183             1                       1852     				if(SS_n || MOSI) ns <= IDLE;
    184             1                      28516     				else ns <= WRITE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    186                                    31164     Count coming in to IF
    186             1                       2010     				if(SS_n || ~MOSI) ns <= IDLE;
    187             1                      29154     				else ns <= WAIT_RD2;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    189                                    40470     Count coming in to IF
    189             1                        217     				if(SS_n) ns <= IDLE;
    190             1                      40253     				else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    191                                    40253     Count coming in to IF
    191             1                      13043     					if(rd_addr_received && MOSI) ns <= READ_DATA;
    192             1                      11650     					else if(~rd_addr_received && ~MOSI) ns <= READ_ADD;
    193             1                      15560     					else ns <= IDLE;
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    196                                   168562     Count coming in to IF
    196             1                     141796     				if(~SS_n && start_to_give)	begin
    199             1                      26488     				else if(SS_n)	begin
                                             278     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    208                                   730317     Count coming in to IF
    208             1                      59801     		if(cs == IDLE) begin
                                          670516     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    219                                   275286     Count coming in to IF
    219             1                      23252     		if (cs == READ_ADD)
    221             1                      23036     		else if (cs == READ_DATA)
                                          228998     All False Count
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    226                                   711890     Count coming in to IF
    226             1                      68569     		if(~rst_n || SS_n) begin
    231             1                     643321     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    232                                   643321     Count coming in to IF
    232             1                     450009     			if (start_to_give)	begin
    244             1                     193312     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    234                                   450009     Count coming in to IF
    234             1                      48372     				if (i==ADDR_SIZE) begin 					//param
    239             1                     401637     				else  begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    246                                   193312     Count coming in to IF
    246             1                      53707     				if( ((cs == WAIT_WR) && ~MOSI) || ((cs == WAIT_RD) && MOSI) ) begin
                                          139605     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    263                                   157901     Count coming in to IF
    263             1                       9316     		if(~rst_n) begin
    268             1                      11285     		else if(cs == READ_DATA) begin
    272             1                     137300     		else start_to_take <= 0;
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    276                                   468422     Count coming in to IF
    276             1                      69663     		if(~rst_n || SS_n) begin
    281             1                     398759     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    282                                   398759     Count coming in to IF
    282             1                     101501     			if (tx_valid && start_to_take) begin
    293             1                     297258     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    285                                   101501     Count coming in to IF
    285             1                      11275     				if (j == ADDR_SIZE)	begin 				//param
    289             1                      90226     				else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    302                                   633182     Count coming in to IF
    302             1                     195321     	assign rx_data = ( (cs == READ_ADD) || (cs == READ_DATA) ) ? {1'b1, rx_temp} : {1'b0, rx_temp};
    302             2                     437861     	assign rx_data = ( (cs == READ_ADD) || (cs == READ_DATA) ) ? {1'b1, rx_temp} : {1'b0, rx_temp};
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      29        29         0   100.00%

================================Condition Details================================

Condition Coverage for instance /slave_tb/DUT --

  File slave.v
----------------Focused Condition View-------------------
Line       170 Item    1  (~SS_n && start_to_give)
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
           SS_n         Y
  start_to_give         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  SS_n_0                start_to_give                 
  Row   2:          1  SS_n_1                -                             
  Row   3:          1  start_to_give_0       ~SS_n                         
  Row   4:          1  start_to_give_1       ~SS_n                         

----------------Focused Condition View-------------------
Line       183 Item    1  (SS_n || MOSI)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         Y
        MOSI         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  SS_n_0                ~MOSI                         
  Row   2:          1  SS_n_1                -                             
  Row   3:          1  MOSI_0                ~SS_n                         
  Row   4:          1  MOSI_1                ~SS_n                         

----------------Focused Condition View-------------------
Line       186 Item    1  (SS_n || ~MOSI)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        SS_n         Y
        MOSI         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  SS_n_0                MOSI                          
  Row   2:          1  SS_n_1                -                             
  Row   3:          1  MOSI_0                ~SS_n                         
  Row   4:          1  MOSI_1                ~SS_n                         

----------------Focused Condition View-------------------
Line       191 Item    1  (rd_addr_received && MOSI)
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  rd_addr_received         Y
              MOSI         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_addr_received_0    -                             
  Row   2:          1  rd_addr_received_1    MOSI                          
  Row   3:          1  MOSI_0                rd_addr_received              
  Row   4:          1  MOSI_1                rd_addr_received              

----------------Focused Condition View-------------------
Line       192 Item    1  (rd_addr_received ~| MOSI)
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
  rd_addr_received         Y
              MOSI         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rd_addr_received_0    ~MOSI                         
  Row   2:          1  rd_addr_received_1    ~MOSI                         
  Row   3:          1  MOSI_0                ~rd_addr_received             
  Row   4:          1  MOSI_1                ~rd_addr_received             

----------------Focused Condition View-------------------
Line       196 Item    1  (~SS_n && start_to_give)
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
           SS_n         Y
  start_to_give         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  SS_n_0                start_to_give                 
  Row   2:          1  SS_n_1                -                             
  Row   3:          1  start_to_give_0       ~SS_n                         
  Row   4:          1  start_to_give_1       ~SS_n                         

----------------Focused Condition View-------------------
Line       208 Item    1  (cs == 0)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 0)_0           -                             
  Row   2:          1  (cs == 0)_1           -                             

----------------Focused Condition View-------------------
Line       219 Item    1  (cs == 2)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 2)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 2)_0           -                             
  Row   2:          1  (cs == 2)_1           -                             

----------------Focused Condition View-------------------
Line       221 Item    1  (cs == 1)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 1)_0           -                             
  Row   2:          1  (cs == 1)_1           -                             

----------------Focused Condition View-------------------
Line       226 Item    1  (~rst_n || SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rst_n         Y
        SS_n         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rst_n_0               -                             
  Row   2:          1  rst_n_1               ~SS_n                         
  Row   3:          1  SS_n_0                rst_n                         
  Row   4:          1  SS_n_1                rst_n                         

----------------Focused Condition View-------------------
Line       234 Item    1  (i == 8)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (i == 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (i == 8)_0            -                             
  Row   2:          1  (i == 8)_1            -                             

-----------Focused Condition View (Bimodal)--------------
Line       246 Item    1  (((cs == 5) && ~MOSI) || ((cs == 6) && MOSI))
Condition totals: 3 of 3 input terms covered = 100.00%

   Input Term   Covered  Reason for no coverage                  Hint
  -----------  --------  --------------------------------------  --------------
    (cs == 5)         Y
         MOSI         Y
    (cs == 6)         Y

    Rows:   Hits(->0)   Hits(->1)  FEC Target            Non-masking condition(s)                       

---------  ----------  ----------  --------------------  -------------------------                      
 Row   1:           1           0  (cs == 5)_0           ~((cs == 6) && MOSI)                           
 Row   2:           0           1  (cs == 5)_1           ~MOSI                                          
 Row   3:           0           1  MOSI_0                (cs == 5), (~((cs == 5) && ~MOSI) && (cs == 6))
 Row   4:           1           1  MOSI_1                (~((cs == 6) && MOSI) && (cs == 5)), (cs == 6) 
 Row   5:           1           0  (cs == 6)_0           ~((cs == 5) && ~MOSI)                          
 Row   6:           0           1  (cs == 6)_1           MOSI                                           

----------------Focused Condition View-------------------
Line       268 Item    1  (cs == 1)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 1)_0           -                             
  Row   2:          1  (cs == 1)_1           -                             

----------------Focused Condition View-------------------
Line       276 Item    1  (~rst_n || SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rst_n         Y
        SS_n         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rst_n_0               -                             
  Row   2:          1  rst_n_1               ~SS_n                         
  Row   3:          1  SS_n_0                rst_n                         
  Row   4:          1  SS_n_1                rst_n                         

----------------Focused Condition View-------------------
Line       282 Item    1  (tx_valid && start_to_take)
Condition totals: 2 of 2 input terms covered = 100.00%

     Input Term   Covered  Reason for no coverage   Hint
    -----------  --------  -----------------------  --------------
       tx_valid         Y
  start_to_take         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  tx_valid_0            -                             
  Row   2:          1  tx_valid_1            start_to_take                 
  Row   3:          1  start_to_take_0       tx_valid                      
  Row   4:          1  start_to_take_1       tx_valid                      

----------------Focused Condition View-------------------
Line       285 Item    1  (j == 8)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
    (j == 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (j == 8)_0            -                             
  Row   2:          1  (j == 8)_1            -                             

----------------Focused Condition View-------------------
Line       302 Item    1  ((cs == 2) || (cs == 1))
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 2)         Y
   (cs == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 2)_0           ~(cs == 1)                    
  Row   2:          1  (cs == 2)_1           -                             
  Row   3:          1  (cs == 1)_0           ~(cs == 2)                    
  Row   4:          1  (cs == 1)_1           ~(cs == 2)                    


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       8         8         0   100.00%
    FSM Transitions                 14        14         0   100.00%

================================FSM Details================================

FSM Coverage for instance /slave_tb/DUT --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
 155                IDLE                   0
 176             CHK_CMD                   3
 162           READ_DATA                   1
 169            READ_ADD                   2
 182             WAIT_WR                   5
 185             WAIT_RD                   6
 195               WRITE                   4
 188            WAIT_RD2                   7
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE               71754          
                 CHK_CMD               59506          
               READ_DATA               23039          
                READ_ADD               23265          
                 WAIT_WR               28516          
                 WAIT_RD               29154          
                   WRITE               53147          
                WAIT_RD2               27097          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
 160                   0               59506          IDLE -> CHK_CMD               
 180                   1               28516          CHK_CMD -> WAIT_WR            
 179                   2               29154          CHK_CMD -> WAIT_RD            
 177                   3                1836          CHK_CMD -> IDLE               
 164                   4               11535          READ_DATA -> IDLE             
 174                   5               11640          READ_ADD -> IDLE              
 184                   6               26610          WAIT_WR -> WRITE              
 183                   7                1906          WAIT_WR -> IDLE               
 187                   8               27097          WAIT_RD -> WAIT_RD2           
 186                   9                2057          WAIT_RD -> IDLE               
 200                  10               26610          WRITE -> IDLE                 
 193                  11                3922          WAIT_RD2 -> IDLE              
 192                  12               11640          WAIT_RD2 -> READ_ADD          
 191                  13               11535          WAIT_RD2 -> READ_DATA          


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   8         8         0   100.00%
        FSM Transitions             14        14         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      69        69         0   100.00%

================================Statement Details================================

Statement Coverage for instance /slave_tb/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave.v
    1                                                module slave(MOSI,SS_n,clk,rst_n,tx_valid,tx_data,rx_data,rx_valid,MISO);
    2                                                
    3                                                	//Parameterized Design -> data width is a function of ADDR_SIZE
    4                                                	parameter ADDR_SIZE = 8;
    5                                                
    6                                                	input MOSI,SS_n,clk,rst_n,tx_valid;
    7                                                	input [ADDR_SIZE-1:0] tx_data;			//param
    8                                                	output [ADDR_SIZE+1:0] rx_data;		//param
    9                                                	output reg rx_valid;
    10                                               	output reg MISO;
    11                                               
    12                                               	parameter IDLE = 3'b000;
    13                                               	parameter READ_DATA = 3'b001;
    14                                               	parameter READ_ADD = 3'b010;
    15                                               	parameter CHK_CMD = 3'b011;
    16                                               	parameter WRITE = 3'b100;
    17                                               	parameter WAIT_WR = 3'b101;
    18                                               	parameter WAIT_RD = 3'b110;
    19                                               	parameter WAIT_RD2 = 3'b111;
    20                                               	reg [2:0] cs,ns;
    21                                               	reg start_to_give,start_to_take;
    22                                               	reg [ADDR_SIZE-1:0] temp;				//param
    23                                               	reg rd_addr_received;
    24              1                          1     	reg [3:0] i = 0 ;
    25              1                          1     	reg [3:0] j = 0;
    26                                               	//reg [4:0] k = 0;
    27                                               
    28                                               	reg [ADDR_SIZE:0] rx_temp;
    29                                               
    30                                               
    31                                               /////////////////////////////////Original Code//////////////////////////////////////
    32                                               /*
    33                                               
    34                                               	always@(posedge clk or negedge rst_n)	begin
    35                                               		if(~rst_n)	begin
    36                                               			cs <= IDLE ;
    37                                               		end
    38                                               		else	begin
    39                                               			cs <= ns ;
    40                                               		end
    41                                               	end
    42                                               	//Next state logic
    43                                               	always@(cs,SS_n,MOSI)	begin
    44                                               		case(cs)
    45                                               			IDLE:
    46                                               				if(SS_n)		begin
    47                                               					ns <= IDLE ;
    48                                               				end
    49                                               				else	begin
    50                                               					ns <= CHK_CMD ;
    51                                               				end
    52                                               			READ_DATA:
    53                                               				if(~SS_n &&( start_to_take || start_to_give ))	begin
    54                                               					ns <= READ_DATA ;
    55                                               				end
    56                                               				else	begin
    57                                               					ns <= IDLE ;
    58                                               				end
    59                                               			READ_ADD:
    60                                               				if(~SS_n && start_to_give)	begin
    61                                               					ns <= READ_ADD ;
    62                                               				end
    63                                               				else	begin
    64                                               					ns <= IDLE ;
    65                                               				end
    66                                               			CHK_CMD:
    67                                               				if( (~SS_n) && (MOSI == 1) && rd_addr_received )	begin
    68                                               					ns <= READ_DATA ;
    69                                               				end
    70                                               				else if( (~SS_n) && (MOSI == 1) )	begin
    71                                               					ns <= READ_ADD ;
    72                                               				end
    73                                               				else if ( (~SS_n) && (MOSI == 0) )	begin
    74                                               					ns <= WRITE ;
    75                                               				end
    76                                               				else if (SS_n)	begin
    77                                               					ns <= IDLE ;
    78                                               				end
    79                                               			WRITE:
    80                                               				if(~SS_n && start_to_give)	begin
    81                                               					ns <= WRITE ;
    82                                               				end
    83                                               				else	begin
    84                                               					ns <= IDLE ;
    85                                               				end
    86                                               
    87                                               			default: ns <= IDLE;
    88                                               		endcase
    89                                               	end
    90                                               
    91                                               	always @(posedge clk) begin
    92                                               		if (cs == READ_ADD)
    93                                               			rd_addr_received=1;
    94                                               		else if (cs == READ_DATA)
    95                                               			rd_addr_received=0;
    96                                               	end
    97                                               
    98                                               	always@(posedge clk)	begin
    99                                               		if (start_to_give ==1 && ~SS_n)	begin
    100                                              			rx_data <= {rx_data[ADDR_SIZE:0],MOSI};		//param
    101                                              			if (i==ADDR_SIZE+1) begin 					//param
    102                                              				i<=0;
    103                                              				rx_valid =1;
    104                                              				start_to_give <= 0;
    105                                              			end
    106                                              			else  begin
    107                                              				i <= i + 1 ;
    108                                              				rx_valid <= 0;
    109                                              			end
    110                                              		end
    111                                              		else begin
    112                                              			rx_valid <=0;
    113                                              			if((cs == CHK_CMD) && (SS_n == 0))	
    114                                              				start_to_give <= 1;
    115                                              		end
    116                                              	end
    117                                              
    118                                              	
    119                                              
    120                                              	always@ (posedge tx_valid)begin
    121                                              		start_to_take <=1;
    122                                              		temp <= tx_data;
    123                                              	end
    124                                              
    125                                              	always@(start_to_take,posedge clk)	begin
    126                                              		if (start_to_take==1 && ~SS_n) begin
    127                                              			MISO <= temp[0];
    128                                              			temp <= {1'b0,temp[ADDR_SIZE-1:1]};			//param
    129                                              			if (j == ADDR_SIZE-1)	begin 				//param
    130                                              				start_to_take <= 0 ;
    131                                              				j <= 0;
    132                                              			end
    133                                              			else begin
    134                                              			j <= j + 1 ;
    135                                              			end
    136                                              		end
    137                                              	end
    138                                              */
    139                                              ////////////////////////////////////////////////////////////////////////////////////
    140                                              
    141                                              
    142                                              /////////////////////////////////Edited Code////////////////////////////////////////
    143                                              
    144             1                     315478     	always@(posedge clk or negedge rst_n)	begin
    145                                              		if(~rst_n)	begin
    146             1                      12159     			cs <= IDLE ;
    147                                              		end
    148                                              		else	begin
    149             1                     303319     			cs <= ns ;
    150                                              		end
    151                                              	end
    152                                              	//Next state logic
    153             1                     624621     	always@(cs,SS_n,MOSI)	begin
    154                                              		case(cs)
    155                                              			IDLE:
    156                                              				if(SS_n)		begin
    157             1                      58482     					ns <= IDLE ;
    158                                              				end
    159                                              				else	begin
    160             1                      68638     					ns <= CHK_CMD ;
    161                                              				end
    162                                              			READ_DATA:
    163                                              				if(SS_n) 	begin
    164             1                      11526     					ns <= IDLE;
    165                                              				end
    166                                              				else if( start_to_take )	begin
    167             1                         21     					ns <= READ_DATA ;
    168                                              				end
    169                                              			READ_ADD:
    170                                              				if(~SS_n && start_to_give)	begin
    171             1                      57346     					ns <= READ_ADD ;
    172                                              				end
    173                                              				else if(SS_n)	begin
    174             1                      11589     					ns <= IDLE ;
    175                                              				end
    176                                              			CHK_CMD:
    177             1                       1303     				if(SS_n) ns <= IDLE;
    178                                              				else begin
    179             1                      44367     					if(MOSI) ns <= WAIT_RD;
    180             1                      43855     					else ns <= WAIT_WR;
    181                                              				end
    182                                              			WAIT_WR:
    183             1                       1852     				if(SS_n || MOSI) ns <= IDLE;
    184             1                      28516     				else ns <= WRITE;
    185                                              			WAIT_RD:
    186             1                       2010     				if(SS_n || ~MOSI) ns <= IDLE;
    187             1                      29154     				else ns <= WAIT_RD2;
    188                                              			WAIT_RD2:
    189             1                        217     				if(SS_n) ns <= IDLE;
    190                                              				else begin
    191             1                      13043     					if(rd_addr_received && MOSI) ns <= READ_DATA;
    192             1                      11650     					else if(~rd_addr_received && ~MOSI) ns <= READ_ADD;
    193             1                      15560     					else ns <= IDLE;
    194                                              				end
    195                                              			WRITE:
    196                                              				if(~SS_n && start_to_give)	begin
    197             1                     141796     					ns <= WRITE ;
    198                                              				end
    199                                              				else if(SS_n)	begin
    200             1                      26488     					ns <= IDLE ;
    201                                              				end
    202                                              
    203             1                          1     			default: ns <= IDLE;
    204                                              		endcase
    205                                              	end
    206                                              
    207             1                     730317     	always @(posedge clk or negedge rst_n) begin
    208                                              		if(cs == IDLE) begin
    209             1                      59801     			rx_temp <= 0;
    210             1                      59801     			rx_valid <= 0;
    211             1                      59801     			MISO <= 0;
    212             1                      59801     			start_to_give <= 0;
    213             1                      59801     			start_to_take <= 0;
    214             1                      59801     			temp <= 0;
    215                                              		end
    216                                              	end
    217                                              
    218             1                     275286     	always @(posedge clk) begin
    219                                              		if (cs == READ_ADD)
    220             1                      23252     			rd_addr_received=1;
    221                                              		else if (cs == READ_DATA)
    222             1                      23036     			rd_addr_received=0;
    223                                              	end
    224                                              
    225             1                     711890     	always@(posedge clk or negedge rst_n) begin
    226                                              		if(~rst_n || SS_n) begin
    227             1                      68569     			rx_temp <= 0;
    228             1                      68569     			rx_valid <= 0;
    229             1                      68569     			i <= 0;
    230                                              		end
    231                                              		else begin
    232                                              			if (start_to_give)	begin
    233             1                     450009     				rx_temp <= {rx_temp[ADDR_SIZE-1:0],MOSI};	//param
    234                                              				if (i==ADDR_SIZE) begin 					//param
    235             1                      48372     					i<=0;
    236             1                      48372     					start_to_give <= 0;
    237             1                      48372     					rx_valid <= 1;
    238                                              				end
    239                                              				else  begin
    240             1                     401637     					i <= i + 1 ;
    241             1                     401637     					rx_valid <= 0;
    242                                              				end
    243                                              			end
    244                                              			else begin
    245             1                     193312     				rx_valid <= 0;
    246                                              				if( ((cs == WAIT_WR) && ~MOSI) || ((cs == WAIT_RD) && MOSI) ) begin
    247             1                      53707     					start_to_give <= 1;
    248             1                      53707     					i <= 0;
    249                                              				end
    250                                              			end
    251                                              		end
    252                                              	end
    253                                              /*
    254                                              	always @(posedge clk or negedge rst_n) begin
    255                                              		if(~rst_n || SS_n) k <= 0;
    256                                              		else begin
    257                                              			if(cs == READ_DATA) k <= k + 1;
    258                                              			else k <= 0;
    259                                              		end
    260                                              	end
    261                                              */
    262             1                     157901     	always@ (posedge tx_valid or negedge rst_n)begin
    263                                              		if(~rst_n) begin
    264             1                       9316     			temp <= 0;
    265             1                       9316     			start_to_take <=0;
    266             1                       9316     			rd_addr_received <= 0;
    267                                              		end
    268                                              		else if(cs == READ_DATA) begin
    269             1                      11285     			start_to_take <=1;
    270             1                      11285     			temp <= tx_data;
    271                                              		end
    272             1                     137300     		else start_to_take <= 0;
    273                                              	end
    274                                              
    275             1                     468422     	always@(posedge clk or negedge rst_n)	begin
    276                                              		if(~rst_n || SS_n) begin
    277             1                      69663     			MISO <= 0;
    278             1                      69663     			start_to_take <= 0;
    279             1                      69663     			j <= 0;
    280                                              		end
    281                                              		else begin
    282                                              			if (tx_valid && start_to_take) begin
    283             1                     101501     				MISO <= temp[ADDR_SIZE-1];
    284             1                     101501     				temp <= {temp[ADDR_SIZE-2:0], 1'b0};	//param
    285                                              				if (j == ADDR_SIZE)	begin 				//param
    286             1                      11275     					start_to_take <= 0 ;
    287             1                      11275     					j <= 0;
    288                                              				end
    289                                              				else begin
    290             1                      90226     					j <= j + 1 ;
    291                                              				end
    292                                              			end
    293                                              			else begin
    294             1                     297258     				MISO <= 0;
    295             1                     297258     				start_to_take <= 0;
    296             1                     297258     				j <= 0;
    297                                              			end
    298                                              		end
    299                                              	end
    300                                              
    301                                              
    302             1                     633183     	assign rx_data = ( (cs == READ_ADD) || (cs == READ_DATA) ) ? {1'b1, rx_temp} : {1'b0, rx_temp};

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        118       118         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /slave_tb/DUT --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                                           cs[2-0]           1           1                              100.00 
                                            i[3-0]           1           1                              100.00 
                                            j[3-0]           1           1                              100.00 
                                           ns[2-0]           1           1                              100.00 
                                  rd_addr_received           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                      rx_temp[8-0]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                     start_to_give           1           1                              100.00 
                                     start_to_take           1           1                              100.00 
                                         temp[7-0]           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         59 
Toggled Node Count   =         59 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (118 of 118 bins)

=================================================================================
=== Instance: /slave_tb/GM
=== Design Unit: work.SPI_SLAVE
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        71        70         1    98.59%

================================Branch Details================================

Branch Coverage for instance /slave_tb/GM

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE.v
------------------------------------IF Branch------------------------------------
    33                                    315478     Count coming in to IF
    33              1                      12159     		if(~rst_n) cs <= IDLE;
    34              1                     303319     		else cs <= ns;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    39                                    624633     Count coming in to CASE
    40              1                     127132     		IDLE: ns = (SS_n) ? IDLE : CHK_CMD;
    41              1                      89525     		CHK_CMD: begin
    48              1                      30368     		WAIT_WR: ns = (SS_n) ? IDLE : (MOSI) ? IDLE : WRITE;
    49              1                      31164     		WAIT_RD: begin
    56              1                      40470     		WAIT_RD2: begin
    64              1                     168562     		WRITE: ns = (SS_n) ? IDLE : WRITE;
    65              1                      69053     		READ_ADD: ns = (SS_n) ? IDLE : READ_ADD;
    66              1                      68358     		READ_DATA: ns = (SS_n) ? IDLE : READ_DATA;
    67              1                          1     		default: ns = IDLE;
Branch totals: 9 hits of 9 branches = 100.00%

------------------------------------IF Branch------------------------------------
    40                                    127132     Count coming in to IF
    40              2                      58483     		IDLE: ns = (SS_n) ? IDLE : CHK_CMD;
    40              3                      68649     		IDLE: ns = (SS_n) ? IDLE : CHK_CMD;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    42                                     89525     Count coming in to IF
    42              1                       1303     			if(SS_n) ns = IDLE;
    43              1                      88222     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    44                                     88222     Count coming in to IF
    44              1                      44367     				if(MOSI) ns = WAIT_RD;
    45              1                      43855     				else ns = WAIT_WR;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                     30368     Count coming in to IF
    48              2                        354     		WAIT_WR: ns = (SS_n) ? IDLE : (MOSI) ? IDLE : WRITE;
    48              3                      30014     		WAIT_WR: ns = (SS_n) ? IDLE : (MOSI) ? IDLE : WRITE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                     30014     Count coming in to IF
    48              4                       1498     		WAIT_WR: ns = (SS_n) ? IDLE : (MOSI) ? IDLE : WRITE;
    48              5                      28516     		WAIT_WR: ns = (SS_n) ? IDLE : (MOSI) ? IDLE : WRITE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    50                                     31164     Count coming in to IF
    50              1                        446     			if(SS_n) ns = IDLE;
    51              1                      30718     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                     30718     Count coming in to IF
    52              1                       1564     				if(~MOSI) ns = IDLE;
    53              1                      29154     				else ns = WAIT_RD2;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    57                                     40470     Count coming in to IF
    57              1                        217     			if(SS_n) ns = IDLE;
    58              1                      40253     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    59                                     40253     Count coming in to IF
    59              1                      13043     				if(MOSI && data_addr) ns = READ_DATA;
    60              1                      11650     				else if(~MOSI && ~data_addr) ns = READ_ADD;
    61              1                      15560     				else ns = IDLE;
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    64                                    168562     Count coming in to IF
    64              2                      26488     		WRITE: ns = (SS_n) ? IDLE : WRITE;
    64              3                     142074     		WRITE: ns = (SS_n) ? IDLE : WRITE;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                     69053     Count coming in to IF
    65              2                      11589     		READ_ADD: ns = (SS_n) ? IDLE : READ_ADD;
    65              3                      57464     		READ_ADD: ns = (SS_n) ? IDLE : READ_ADD;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                     68358     Count coming in to IF
    66              2                      11526     		READ_DATA: ns = (SS_n) ? IDLE : READ_DATA;
    66              3                      56832     		READ_DATA: ns = (SS_n) ? IDLE : READ_DATA;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    73                                    795854     Count coming in to IF
    73              1                      18470     		if(~rst_n) begin
    85              1                     777384     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    86                                    777384     Count coming in to CASE
    87              1                      61706     			IDLE: begin
    98              1                     263302     			WRITE: begin
    108             1                     105510     			READ_ADD: begin
    119             1                     203947     			READ_DATA: begin
    149             1                     142919     			default: begin
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    101                                   263302     Count coming in to IF
    101             1                      25704     				if(f_wr && (bit_cntr_wr == (ADDR_SIZE))) begin //next bit_cntr=10, rx_data is ready
    106             1                     237598     				else rx_valid <= 0; //rx_data is not ready yet
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    111                                   105510     Count coming in to IF
    111             1                      11564     				if(f_rd && (bit_cntr_wr == (ADDR_SIZE-1))) begin //next bit_cntr=10, rx_data is ready
    116             1                      93946     				else rx_valid <= 0; //rx_data is not ready yet
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    117                                   105510     Count coming in to IF
    117             1                      11582     				if(SS_n) data_addr <= 1; //SS_n high -> end of state -> READ_DATA next
                                           93928     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    120                                   203947     Count coming in to IF
    120             1                      91163     				if(f_rd && (bit_cntr_wr < ADDR_SIZE)) begin //bit_cntr<10, rx_data (dummy) is being transferred
    129             1                     112784     				else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    122                                    91163     Count coming in to IF
    122             1                      11285     					if(bit_cntr_wr == (ADDR_SIZE-1)) begin //next bit_cntr=10, rx_data is ready
                                           79878     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    123                                    11285     Count coming in to IF
    123             1                    ***0***     						if(tx_valid) rx_valid <= 0;
    124             1                      11285     						else rx_valid <= 1;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    132                                   112784     Count coming in to IF
    132             1                     101507     					if(f_tx && f_rd_d && tx_valid) begin
    142             1                      11277     					else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    134                                   101507     Count coming in to IF
    134             1                      11276     						if(bit_cntr_rd == (ADDR_SIZE-2)) bit_cntr_rd <= 0; //bit_cntr_rd range=0:7
                                           90231     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    135                                   101507     Count coming in to IF
    135             1                      11275     						if(bit_cntr_rd > (ADDR_SIZE-1)) begin //next bit_cntr=8, tx_data is ready
                                           90232     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    147                                   203947     Count coming in to IF
    147             1                      11526     				if(SS_n) data_addr <= 0; //SS_n high -> end of state -> READ_ADD next
                                          192421     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    160                                   777384     Count coming in to IF
    160             1                      53489     			if(SS_n) begin
                                          723895     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    170                                   622065     Count coming in to IF
    170             1                      90972     	assign rx_data = (cs == READ_DATA) ? {2'b11, temp_rd} : (cs == READ_ADD) ? {2'b10, temp_rd} : {1'b0, temp_wr};
    170             2                     531093     	assign rx_data = (cs == READ_DATA) ? {2'b11, temp_rd} : (cs == READ_ADD) ? {2'b10, temp_rd} : {1'b0, temp_wr};
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    170                                   531093     Count coming in to IF
    170             3                      92964     	assign rx_data = (cs == READ_DATA) ? {2'b11, temp_rd} : (cs == READ_ADD) ? {2'b10, temp_rd} : {1'b0, temp_wr};
    170             4                     438129     	assign rx_data = (cs == READ_DATA) ? {2'b11, temp_rd} : (cs == READ_ADD) ? {2'b10, temp_rd} : {1'b0, temp_wr};
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    173                                   134636     Count coming in to IF
    173             1                      18104     		if(~rst_n || SS_n) f_tx <= 0;
    174             1                     116532     		else f_tx <= 1;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      20        17         3    85.00%

================================Condition Details================================

Condition Coverage for instance /slave_tb/GM --

  File SPI_SLAVE.v
----------------Focused Condition View-------------------
Line       59 Item    1  (MOSI && data_addr)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        MOSI         Y
   data_addr         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  MOSI_0                -                             
  Row   2:          1  MOSI_1                data_addr                     
  Row   3:          1  data_addr_0           MOSI                          
  Row   4:          1  data_addr_1           MOSI                          

----------------Focused Condition View-------------------
Line       60 Item    1  (MOSI ~| data_addr)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        MOSI         Y
   data_addr         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  MOSI_0                ~data_addr                    
  Row   2:          1  MOSI_1                ~data_addr                    
  Row   3:          1  data_addr_0           ~MOSI                         
  Row   4:          1  data_addr_1           ~MOSI                         

----------------Focused Condition View-------------------
Line       101 Item    1  (f_wr && (bit_cntr_wr == 8))
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
                f_wr         Y
  (bit_cntr_wr == 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_wr_0                -                             
  Row   2:          1  f_wr_1                (bit_cntr_wr == 8)            
  Row   3:          1  (bit_cntr_wr == 8)_0  f_wr                          
  Row   4:          1  (bit_cntr_wr == 8)_1  f_wr                          

----------------Focused Condition View-------------------
Line       111 Item    1  (f_rd && (bit_cntr_wr == (8 - 1)))
Condition totals: 2 of 2 input terms covered = 100.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
                      f_rd         Y
  (bit_cntr_wr == (8 - 1))         Y

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:          1  f_rd_0                      -                             
  Row   2:          1  f_rd_1                      (bit_cntr_wr == (8 - 1))      
  Row   3:          1  (bit_cntr_wr == (8 - 1))_0  f_rd                          
  Row   4:          1  (bit_cntr_wr == (8 - 1))_1  f_rd                          

----------------Focused Condition View-------------------
Line       120 Item    1  (f_rd && (bit_cntr_wr < 8))
Condition totals: 1 of 2 input terms covered = 50.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
               f_rd         Y
  (bit_cntr_wr < 8)         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_rd_0                -                             
  Row   2:          1  f_rd_1                (bit_cntr_wr < 8)             
  Row   3:    ***0***  (bit_cntr_wr < 8)_0   f_rd                          
  Row   4:          1  (bit_cntr_wr < 8)_1   f_rd                          

----------------Focused Condition View-------------------
Line       122 Item    1  (bit_cntr_wr == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (bit_cntr_wr == (8 - 1))         Y

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:          1  (bit_cntr_wr == (8 - 1))_0  -                             
  Row   2:          1  (bit_cntr_wr == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       132 Item    1  ((f_tx && f_rd_d) && tx_valid)
Condition totals: 1 of 3 input terms covered = 33.33%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
        f_tx         Y
      f_rd_d         N  '_0' not hit             Hit '_0'
    tx_valid         N  '_0' not hit             Hit '_0'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_tx_0                -                             
  Row   2:          1  f_tx_1                (tx_valid && f_rd_d)          
  Row   3:    ***0***  f_rd_d_0              f_tx                          
  Row   4:          1  f_rd_d_1              (tx_valid && f_tx)            
  Row   5:    ***0***  tx_valid_0            (f_tx && f_rd_d)              
  Row   6:          1  tx_valid_1            (f_tx && f_rd_d)              

----------------Focused Condition View-------------------
Line       134 Item    1  (bit_cntr_rd == (8 - 2))
Condition totals: 1 of 1 input term covered = 100.00%

                Input Term   Covered  Reason for no coverage   Hint
               -----------  --------  -----------------------  --------------
  (bit_cntr_rd == (8 - 2))         Y

     Rows:       Hits  FEC Target                  Non-masking condition(s)      
 ---------  ---------  --------------------        -------------------------     
  Row   1:          1  (bit_cntr_rd == (8 - 2))_0  -                             
  Row   2:          1  (bit_cntr_rd == (8 - 2))_1  -                             

----------------Focused Condition View-------------------
Line       135 Item    1  (bit_cntr_rd > (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (bit_cntr_rd > (8 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (bit_cntr_rd > (8 - 1))_0  -                             
  Row   2:          1  (bit_cntr_rd > (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       170 Item    1  (cs == 4)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 4)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 4)_0           -                             
  Row   2:          1  (cs == 4)_1           -                             

----------------Focused Condition View-------------------
Line       170 Item    2  (cs == 3)
Condition totals: 1 of 1 input term covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   (cs == 3)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (cs == 3)_0           -                             
  Row   2:          1  (cs == 3)_1           -                             

----------------Focused Condition View-------------------
Line       173 Item    1  (~rst_n || SS_n)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
       rst_n         Y
        SS_n         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  rst_n_0               -                             
  Row   2:          1  rst_n_1               ~SS_n                         
  Row   3:          1  SS_n_0                rst_n                         
  Row   4:          1  SS_n_1                rst_n                         


FSM Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    FSM States                       8         8         0   100.00%
    FSM Transitions                 14        14         0   100.00%

================================FSM Details================================

FSM Coverage for instance /slave_tb/GM --

FSM_ID: cs
    Current State Object : cs
    ----------------------
    State Value MapInfo :
    ---------------------
Line          State Name               Value
----          ----------               -----
  40                IDLE                   0
  41             CHK_CMD                   1
  48             WAIT_WR                   5
  49             WAIT_RD                   6
  64               WRITE                   2
  56            WAIT_RD2                   7
  65            READ_ADD                   3
  66           READ_DATA                   4
    Covered States :
    ----------------
                   State           Hit_count
                   -----           ---------
                    IDLE               71754          
                 CHK_CMD               59506          
                 WAIT_WR               28516          
                 WAIT_RD               29154          
                   WRITE               53147          
                WAIT_RD2               27097          
                READ_ADD               23265          
               READ_DATA               23039          
    Covered Transitions :
    ---------------------
Line            Trans_ID           Hit_count          Transition          
----            --------           ---------          ----------          
  40                   0               59506          IDLE -> CHK_CMD               
  45                   1               28516          CHK_CMD -> WAIT_WR            
  44                   2               29154          CHK_CMD -> WAIT_RD            
  42                   3                1836          CHK_CMD -> IDLE               
  48                   4               26610          WAIT_WR -> WRITE              
  48                   5                1906          WAIT_WR -> IDLE               
  53                   6               27097          WAIT_RD -> WAIT_RD2           
  52                   7                2057          WAIT_RD -> IDLE               
  64                   8               26610          WRITE -> IDLE                 
  61                   9                3922          WAIT_RD2 -> IDLE              
  60                  10               11640          WAIT_RD2 -> READ_ADD          
  59                  11               11535          WAIT_RD2 -> READ_DATA          
  65                  12               11640          READ_ADD -> IDLE              
  66                  13               11535          READ_DATA -> IDLE             


    Summary                       Bins      Hits    Misses  Coverage
    -------                       ----      ----    ------  --------
        FSM States                   8         8         0   100.00%
        FSM Transitions             14        14         0   100.00%
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      85        84         1    98.82%

================================Statement Details================================

Statement Coverage for instance /slave_tb/GM --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File SPI_SLAVE.v
    1                                                module SPI_SLAVE(clk, rst_n, SS_n, MOSI, MISO, rx_data, rx_valid, tx_data, tx_valid);
    2                                                	parameter ADDR_SIZE = 8;
    3                                                
    4                                                	parameter IDLE = 3'b000;
    5                                                	parameter CHK_CMD = 3'b001;
    6                                                	parameter WRITE = 3'b010;
    7                                                	parameter READ_ADD = 3'b011;
    8                                                	parameter READ_DATA = 3'b100;
    9                                                	parameter WAIT_WR = 3'b101;
    10                                               	parameter WAIT_RD = 3'b110;
    11                                               	parameter WAIT_RD2 = 3'b111;
    12                                               
    13                                               	input clk, rst_n, SS_n, MOSI, tx_valid;
    14                                               	input [ADDR_SIZE-1:0] tx_data;
    15                                               
    16                                               	output reg MISO, rx_valid;
    17                                               	output [ADDR_SIZE+1:0] rx_data;
    18                                               
    19                                                   (* fsm_encoding = "gray" *)
    20                                               	reg [2:0] cs, ns;
    21                                               	reg data_addr; //0: addr, 1: data
    22                                               	reg [4:0] bit_cntr_wr, bit_cntr_rd; //counting cycles - indicates end of state
    23                                               
    24                                               	reg f_wr, f_rd, f_rd_d;
    25                                               
    26                                               	reg [ADDR_SIZE:0] temp_wr;
    27                                               	reg [ADDR_SIZE-1:0] temp_rd;
    28                                               
    29                                               	reg f_tx;
    30                                               
    31                                               	//State Memory
    32              1                     315478     	always @(posedge clk or negedge rst_n) begin
    33              1                      12159     		if(~rst_n) cs <= IDLE;
    34              1                     303319     		else cs <= ns;
    35                                               	end
    36                                               
    37                                               	//Next State Logic
    38              1                     624633     	always @(*) begin
    39                                               		case(cs)
    40              1                     127132     		IDLE: ns = (SS_n) ? IDLE : CHK_CMD;
    41                                               		CHK_CMD: begin
    42              1                       1303     			if(SS_n) ns = IDLE;
    43                                               			else begin
    44              1                      44367     				if(MOSI) ns = WAIT_RD;
    45              1                      43855     				else ns = WAIT_WR;
    46                                               			end
    47                                               		end
    48              1                      30368     		WAIT_WR: ns = (SS_n) ? IDLE : (MOSI) ? IDLE : WRITE;
    49                                               		WAIT_RD: begin
    50              1                        446     			if(SS_n) ns = IDLE;
    51                                               			else begin
    52              1                       1564     				if(~MOSI) ns = IDLE;
    53              1                      29154     				else ns = WAIT_RD2;
    54                                               			end
    55                                               		end
    56                                               		WAIT_RD2: begin
    57              1                        217     			if(SS_n) ns = IDLE;
    58                                               			else begin
    59              1                      13043     				if(MOSI && data_addr) ns = READ_DATA;
    60              1                      11650     				else if(~MOSI && ~data_addr) ns = READ_ADD;
    61              1                      15560     				else ns = IDLE;
    62                                               			end
    63                                               		end
    64              1                     168562     		WRITE: ns = (SS_n) ? IDLE : WRITE;
    65              1                      69053     		READ_ADD: ns = (SS_n) ? IDLE : READ_ADD;
    66              1                      68358     		READ_DATA: ns = (SS_n) ? IDLE : READ_DATA;
    67              1                          1     		default: ns = IDLE;
    68                                               		endcase
    69                                               	end
    70                                               
    71                                               	//Output Logic
    72              1                     795854     	always @(posedge clk or negedge rst_n) begin
    73                                               		if(~rst_n) begin
    74              1                      18470     			MISO <= 0;
    75              1                      18470     			rx_valid <= 0;
    76              1                      18470     			temp_wr <= 0;
    77              1                      18470     			temp_rd <= 0;
    78              1                      18470     			bit_cntr_wr <= 0;
    79              1                      18470     			bit_cntr_rd <= 0;
    80              1                      18470     			data_addr <= 0;
    81              1                      18470     			f_wr <= 1;
    82              1                      18470     			f_rd <= 1;
    83              1                      18470     			f_rd_d <= 1;
    84                                               		end
    85                                               		else begin
    86                                               			case(cs)
    87                                               			IDLE: begin
    88              1                      61706     				MISO <= 0;
    89              1                      61706     				rx_valid <= 0;
    90              1                      61706     				temp_wr <= 0;
    91              1                      61706     				temp_rd <= 0;
    92              1                      61706     				bit_cntr_wr <= 0;
    93              1                      61706     				bit_cntr_rd <= 0;
    94              1                      61706     				f_wr <= 1;
    95              1                      61706     				f_rd <= 1;
    96              1                      61706     				f_rd_d <= 1;
    97                                               			end
    98                                               			WRITE: begin
    99              1                     263302     				temp_wr <= {temp_wr[ADDR_SIZE-1:0], MOSI}; //Shift OP (Serial to Parallel)
    100             1                     263302     				bit_cntr_wr <= bit_cntr_wr + 1;
    101                                              				if(f_wr && (bit_cntr_wr == (ADDR_SIZE))) begin //next bit_cntr=10, rx_data is ready
    102             1                      25704     					rx_valid <= 1;
    103             1                      25704     					bit_cntr_wr <= 0;
    104             1                      25704     					f_wr <= 0;
    105                                              				end
    106             1                     237598     				else rx_valid <= 0; //rx_data is not ready yet
    107                                              			end
    108                                              			READ_ADD: begin
    109             1                     105510     				temp_rd <= {temp_rd[ADDR_SIZE-2:0], MOSI}; //Shift OP (Serial to Parallel)
    110             1                     105510     				bit_cntr_wr <= bit_cntr_wr + 1;
    111                                              				if(f_rd && (bit_cntr_wr == (ADDR_SIZE-1))) begin //next bit_cntr=10, rx_data is ready
    112             1                      11564     					rx_valid <= 1;
    113             1                      11564     					bit_cntr_wr <= 0;
    114             1                      11564     					f_rd <= 0;
    115                                              				end
    116             1                      93946     				else rx_valid <= 0; //rx_data is not ready yet
    117             1                      11582     				if(SS_n) data_addr <= 1; //SS_n high -> end of state -> READ_DATA next
    118                                              			end
    119                                              			READ_DATA: begin
    120                                              				if(f_rd && (bit_cntr_wr < ADDR_SIZE)) begin //bit_cntr<10, rx_data (dummy) is being transferred
    121             1                      91163     					temp_rd <= {temp_rd[ADDR_SIZE-2:0], MOSI}; //Shift OP (Serial to Parallel)
    122                                              					if(bit_cntr_wr == (ADDR_SIZE-1)) begin //next bit_cntr=10, rx_data is ready
    123             1                    ***0***     						if(tx_valid) rx_valid <= 0;
    124             1                      11285     						else rx_valid <= 1;
    125             1                      11285     						f_rd <= 0;
    126                                              					end
    127             1                      91163     					bit_cntr_wr <= bit_cntr_wr + 1;
    128                                              				end
    129                                              				else begin
    130             1                     112784     					bit_cntr_wr <= 0;
    131             1                     112784     					rx_valid <= 0;
    132                                              					if(f_tx && f_rd_d && tx_valid) begin
    133             1                     101507     						MISO <= tx_data[ADDR_SIZE-1-bit_cntr_rd]; //Parallel to Serial
    134             1                      11276     						if(bit_cntr_rd == (ADDR_SIZE-2)) bit_cntr_rd <= 0; //bit_cntr_rd range=0:7
    135                                              						if(bit_cntr_rd > (ADDR_SIZE-1)) begin //next bit_cntr=8, tx_data is ready
    136             1                      11275     							MISO <= 0;
    137             1                      11275     							f_rd_d <= 0;
    138             1                      11275     							f_tx <= 0;
    139                                              						end
    140             1                     101507     						bit_cntr_rd <= bit_cntr_rd + 1;
    141                                              					end
    142                                              					else begin
    143             1                      11277     						MISO <= 0; //MISO=0 as long as tx_valid is low
    144             1                      11277     						bit_cntr_rd <= 0;
    145                                              					end
    146                                              				end
    147             1                      11526     				if(SS_n) data_addr <= 0; //SS_n high -> end of state -> READ_ADD next
    148                                              			end
    149                                              			default: begin
    150             1                     142919     				MISO <= 0;
    151             1                     142919     				rx_valid <= 0;
    152             1                     142919     				temp_wr <= 0;
    153             1                     142919     				temp_rd <= 0;
    154             1                     142919     				bit_cntr_wr <= 0;
    155             1                     142919     				bit_cntr_rd <= 0;
    156             1                     142919     				f_tx <= 0;
    157                                              			end
    158                                              			endcase
    159                                              
    160                                              			if(SS_n) begin
    161             1                      53489     				temp_wr <= 0;
    162             1                      53489     				temp_rd <= 0;
    163             1                      53489     				rx_valid <= 0;
    164             1                      53489     				MISO <= 0;
    165             1                      53489     				f_tx <= 0;
    166                                              			end
    167                                              		end
    168                                              	end
    169                                              
    170             1                     622066     	assign rx_data = (cs == READ_DATA) ? {2'b11, temp_rd} : (cs == READ_ADD) ? {2'b10, temp_rd} : {1'b0, temp_wr};
    171                                              
    172             1                     134636     	always @(posedge tx_valid or negedge rst_n) begin
    173             1                      18104     		if(~rst_n || SS_n) f_tx <= 0;
    174             1                     116532     		else f_tx <= 1;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        126       124         2    98.41%

================================Toggle Details================================

Toggle Coverage for instance /slave_tb/GM --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                    bit_cntr_rd[4]           0           0                                0.00 
                                  bit_cntr_rd[3-0]           1           1                              100.00 
                                  bit_cntr_wr[4-0]           1           1                              100.00 
                                               clk           1           1                              100.00 
                                           cs[2-0]           1           1                              100.00 
                                         data_addr           1           1                              100.00 
                                              f_rd           1           1                              100.00 
                                            f_rd_d           1           1                              100.00 
                                              f_tx           1           1                              100.00 
                                              f_wr           1           1                              100.00 
                                           ns[2-0]           1           1                              100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                          rx_valid           1           1                              100.00 
                                      temp_rd[7-0]           1           1                              100.00 
                                      temp_wr[8-0]           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =         63 
Toggled Node Count   =         62 
Untoggled Node Count =          1 

Toggle Coverage      =      98.41% (124 of 126 bins)

=================================================================================
=== Instance: /slave_tb
=== Design Unit: work.slave_tb
=================================================================================

Assertion Coverage:
    Assertions                       9         9         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/slave_tb/stimulus_gen_reset/#anonblk#42774786#174#4#/#ublk#42774786#174/immed__175
                     slave_tb.sv(175)                   0          1
/slave_tb/#ublk#42774786#232/immed__233
                     slave_tb.sv(233)                   0          1
/slave_tb/write_add_seq/#anonblk#42774786#270#4#/#ublk#42774786#270/immed__272
                     slave_tb.sv(272)                   0          1
/slave_tb/write_data_seq/#anonblk#42774786#284#4#/#ublk#42774786#284/immed__286
                     slave_tb.sv(286)                   0          1
/slave_tb/read_add_seq/#anonblk#42774786#298#4#/#ublk#42774786#298/immed__300
                     slave_tb.sv(300)                   0          1
/slave_tb/read_data_seq/#anonblk#42774786#311#4#/#ublk#42774786#311/immed__313
                     slave_tb.sv(313)                   0          1
/slave_tb/stimulus_gen3/#anonblk#42774786#355#4#/#ublk#42774786#355/immed__356
                     slave_tb.sv(356)                   0          1
/slave_tb/stimulus_gen4/#anonblk#42774786#389#4#/#ublk#42774786#389/immed__390
                     slave_tb.sv(390)                   0          1
/slave_tb/stimulus_gen5/#anonblk#42774786#403#4#/#ublk#42774786#403/immed__404
                     slave_tb.sv(404)                   0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        27        20         7    74.07%

================================Branch Details================================

Branch Coverage for instance /slave_tb

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_tb.sv
------------------------------------IF Branch------------------------------------
    190                                    28470     Count coming in to IF
    190             1                    ***0***     		if(rx_data !== 0) begin
    194             1                      28470     		else correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    196                                    28470     Count coming in to IF
    196             1                    ***0***     		if(rx_valid !== 0) begin
    200             1                      28470     		else correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    202                                    28470     Count coming in to IF
    202             1                    ***0***     		if(MISO !== 0) begin
    206             1                      28470     		else correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    234                                   792890     Count coming in to IF
    234             1                     203949     		if(cs_DUT == READ_DATA) begin
    242             1                     588941     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    236                                   203949     Count coming in to IF
    236             1                     124071     			if(rx_high_since > ADDR_SIZE - 1) tx_valid <= 1;
    237             1                      79878     			else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    243                                   588941     Count coming in to IF
    243             1                      11535     			if(ns_DUT == READ_DATA) tx_valid <= 0;
    244             1                     577406     			else tx_valid <= sc.tx_valid;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------CASE Branch------------------------------------
    357                                    10000     Count coming in to CASE
    358             1                       2494     				0: write_add_seq;
    359             1                       2465     				1: write_data_seq;
    360             1                       2498     				2: read_add_seq;
    361             1                       2543     				3: read_data_seq;
                                         ***0***     All False Count
Branch totals: 4 hits of 5 branches = 80.00%

------------------------------------IF Branch------------------------------------
    421                                   794780     Count coming in to IF
    421             1                      18471     		if(~rst_n) check_reset;
    422             1                     776309     		else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    425                                   776309     Count coming in to IF
    425             1                      48367     			if(rx_valid) check_rx_data;
                                          727942     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    430                                   776309     Count coming in to IF
    430             1                    ***0***     		if(rx_valid !== rx_valid_exp) begin
    434             1                     776309     		else correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    438                                    48367     Count coming in to IF
    438             1                    ***0***     		if(rx_data !== rx_data_exp) begin
    442             1                      48367     		else correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    446                                   776309     Count coming in to IF
    446             1                    ***0***     		if(MISO !== MISO_exp) begin
    450             1                     776309     		else correct_count++;
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       9         3         6    33.33%

================================Condition Details================================

Condition Coverage for instance /slave_tb --

  File slave_tb.sv
----------------Focused Condition View-------------------
Line       190 Item    1  (rx_data !== 0)
Condition totals: 0 of 1 input term covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (rx_data !== 0)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (rx_data !== 0)_0     -                             
  Row   2:    ***0***  (rx_data !== 0)_1     -                             

----------------Focused Condition View-------------------
Line       196 Item    1  (rx_valid !== 1'b0)
Condition totals: 0 of 1 input term covered = 0.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (rx_valid !== 1'b0)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (rx_valid !== 1'b0)_0  -                             
  Row   2:    ***0***  (rx_valid !== 1'b0)_1  -                             

----------------Focused Condition View-------------------
Line       202 Item    1  (MISO !== 1'b0)
Condition totals: 0 of 1 input term covered = 0.00%

       Input Term   Covered  Reason for no coverage   Hint
      -----------  --------  -----------------------  --------------
  (MISO !== 1'b0)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (MISO !== 1'b0)_0     -                             
  Row   2:    ***0***  (MISO !== 1'b0)_1     -                             

----------------Focused Condition View-------------------
Line       234 Item    1  (cs_DUT == READ_DATA)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (cs_DUT == READ_DATA)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (cs_DUT == READ_DATA)_0  -                             
  Row   2:          1  (cs_DUT == READ_DATA)_1  -                             

----------------Focused Condition View-------------------
Line       236 Item    1  (rx_high_since > (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
  (rx_high_since > (8 - 1))         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  (rx_high_since > (8 - 1))_0  -                             
  Row   2:          1  (rx_high_since > (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       243 Item    1  (ns_DUT == READ_DATA)
Condition totals: 1 of 1 input term covered = 100.00%

             Input Term   Covered  Reason for no coverage   Hint
            -----------  --------  -----------------------  --------------
  (ns_DUT == READ_DATA)         Y

     Rows:       Hits  FEC Target               Non-masking condition(s)      
 ---------  ---------  --------------------     -------------------------     
  Row   1:          1  (ns_DUT == READ_DATA)_0  -                             
  Row   2:          1  (ns_DUT == READ_DATA)_1  -                             

----------------Focused Condition View-------------------
Line       430 Item    1  (rx_valid !== rx_valid_exp)
Condition totals: 0 of 1 input term covered = 0.00%

                   Input Term   Covered  Reason for no coverage   Hint
                  -----------  --------  -----------------------  --------------
  (rx_valid !== rx_valid_exp)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                     Non-masking condition(s)      
 ---------  ---------  --------------------           -------------------------     
  Row   1:          1  (rx_valid !== rx_valid_exp)_0  -                             
  Row   2:    ***0***  (rx_valid !== rx_valid_exp)_1  -                             

----------------Focused Condition View-------------------
Line       438 Item    1  (rx_data !== rx_data_exp)
Condition totals: 0 of 1 input term covered = 0.00%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
  (rx_data !== rx_data_exp)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  (rx_data !== rx_data_exp)_0  -                             
  Row   2:    ***0***  (rx_data !== rx_data_exp)_1  -                             

----------------Focused Condition View-------------------
Line       446 Item    1  (MISO !== MISO_exp)
Condition totals: 0 of 1 input term covered = 0.00%

           Input Term   Covered  Reason for no coverage   Hint
          -----------  --------  -----------------------  --------------
  (MISO !== MISO_exp)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target             Non-masking condition(s)      
 ---------  ---------  --------------------   -------------------------     
  Row   1:          1  (MISO !== MISO_exp)_0  -                             
  Row   2:    ***0***  (MISO !== MISO_exp)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                     151       139        12    92.05%

================================Statement Details================================

Statement Coverage for instance /slave_tb --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_tb.sv
    4                                                module slave_tb;
    5                                                	//Parameters
    6                                                	parameter ADDR_SIZE = 8;
    7                                                
    8                                                	//Inputs to DUT
    9                                                	bit MOSI, SS_n, clk, rst_n, tx_valid;
    10                                               	logic [ADDR_SIZE-1:0] tx_data;
    11                                               
    12                                               	//Outputs of DUT
    13                                               	bit MISO, rx_valid;
    14                                               	logic [ADDR_SIZE+1:0] rx_data;
    15                                               
    16                                               	//Outputs of Golden Model
    17                                               	bit MISO_exp, rx_valid_exp;
    18                                               	logic [ADDR_SIZE+1:0] rx_data_exp;
    19                                               
    20                                               	//Number of Tests
    21                                               	parameter TESTS = 10000;
    22                                               
    23                                               	//Correct Count and Error Count Signals
    24                                               	int correct_count, error_count;
    25                                               
    26                                               	//Object Creation
    27              1                          1     	slave_class #(ADDR_SIZE) sc = new();
    28                                               
    29                                               	//For Visual Clarity
    30                                               	//cs and ns of DUT
    31                                               	state_dut_e cs_DUT, ns_DUT;
    32              1                     253566     	assign cs_DUT = state_dut_e'(DUT.cs);
    33              1                     308246     	assign ns_DUT = state_dut_e'(DUT.ns);
    34                                               
    35                                               	//cs and ns of GM
    36                                               	state_gm_e cs_gm, ns_gm;
    37              1                     253566     	assign cs_gm = state_gm_e'(GM.cs);
    38              1                     308246     	assign ns_gm = state_gm_e'(GM.ns);
    39                                               
    40                                               
    41                                               
    42                                               	//Clock Generation
    43                                               	initial begin
    44              1                          1        		forever begin
    45              1                    1585781        			#1 clk = ~clk;
    45              2                    1585780     
    46              1                    1585780        			sc.clk = clk;
    47                                                  		end
    48                                               	end
    49                                               
    50                                               
    51                                               	//DUT Instantiation
    52                                               	slave #(.ADDR_SIZE(ADDR_SIZE)) DUT (.clk(clk), .rst_n(rst_n), .MOSI(MOSI), .SS_n(SS_n) , .tx_valid(tx_valid), .tx_data(tx_data), .rx_data(rx_data), .rx_valid(rx_valid), .MISO(MISO));
    53                                               
    54                                               	//Golden Model Instantiation
    55                                               	SPI_SLAVE #(.ADDR_SIZE(ADDR_SIZE)) GM (.clk(clk), .rst_n(rst_n), .MOSI(MOSI), .SS_n(SS_n) , .tx_valid(tx_valid), .tx_data(tx_data), .rx_data(rx_data_exp), .rx_valid(rx_valid_exp), .MISO(MISO_exp));
    56                                               
    57                                               	//Binding Assertions
    58                                               	bind DUT slave_sva slave_sva_inst (.clk(clk), .rst_n(rst_n), .MOSI(MOSI), .SS_n(SS_n) , .tx_valid(tx_valid), .tx_data(tx_data), .rx_data(rx_data), .rx_valid(rx_valid), .MISO(MISO), .cs(cs), .ns(ns));
    59                                               
    60                                               
    61                                               
    62                                               	initial begin
    63                                               
    64                                               		//Assert Reset - Initial State
    65              1                          1     		assert_reset;
    66                                               
    67                                               
    68                                               
    69                                               
    70                                               		/*TEST 0: 	- Checks (rst_n) Functionality
    71                                               					- slave outputs (rx_data, rx_valid, MISO) reset to zero @(rst_n = 0)
    72                                               					- Randomization (of all variables) is done Under No Constraints
    73                                               		*/
    74              1                          1     		stimulus_gen_reset;
    75                                               
    76                                               
    77                                               
    78                                               
    79                                               		//Deassert Reset
    80              1                          1     		deassert_reset;
    81                                               
    82                                               
    83                                               
    84                                               
    85                                               
    86                                               
    87                                               
    88                                               
    89                                               		/*TEST 1:	- Checks Normal Write Operation of Slave
    90                                               					- SS_n should equal 0 throughout the cycle -> 1 after data is collected
    91                                               					- Cycle(1): MOSI should equal 0 (WRITE) -> 00 (Send Address)
    92                                               					- rx_data should be ready and rx_valid should be high after 8 cycles
    93                                               					- Cycle(2): MOSI should equal 0 (WRITE) -> 01 (Send Data)
    94                                               					- rx_data should be ready and rx_valid should be high after 8 cycles
    95                                               					- Randomization (of MOSI) is done Under No Constraints
    96                                               		*/
    97              1                          1     		stimulus_gen1;
    98                                               
    99                                               
    100                                              		
    101                                              
    102                                              
    103                                              		/*TEST 2:	- Checks Normal Read Operation of Slave
    104                                              					- SS_n should equal 0 throughout the 1st cycle -> 1 after data is collected
    105                                              					- Cycle(1): MOSI should equal 1 (READ) -> 10 (Send Address)
    106                                              					- Cycle(2): MOSI should equal 1 (READ) -> 11 (Receive Data)
    107                                              					- MISO should translate tx_data to serial output when tx_valid is high
    108                                              					- Randomization (of MOSI) is done Under No Constraints
    109                                              		*/
    110             1                          1     		stimulus_gen2;
    111                                              
    112                                              
    113                                              
    114                                              
    115                                              
    116                                              		/*TEST 3:	- Checks slave's behavior going from one sequence to another
    117                                              					- Same functionality as Normal Operation
    118                                              					- The slave can't go through two consecutive (READ_ADD) sequences or (READ_DATA) sequences
    119                                              					- Randomization (of MOSI) is done Under No Constraints
    120                                              		*/
    121             1                          1     		stimulus_gen3;
    122                                              
    123                                              
    124                                              
    125                                              
    126                                              
    127                                              		/*TEST 4:	- Randomization of all variables under constraints:
    128                                              						- rst_n is inactive most of the time
    129                                              						- SS_n is active most of the time
    130                                              						- tx_valid is inactive most of the time
    131                                              						- tx_valid is high if cs = READ_DATA and rx_valid was high the previous cycle (to mimic RAM behavior)
    132                                              					- SS_n deactivated mid-transmission -> slave goes IDLE, outputs reset to zero
    133                                              					- SS_n deactivated after-transmission -> slave should stay stable
    134                                              		*/
    135             1                          1     		stimulus_gen4;
    136                                              
    137                                              
    138                                              
    139                                              
    140                                              		/*TEST 5:	- Randomization of all variables under constraints
    141                                              					- Output is checked against golden model
    142                                              		*/
    143             1                          1     		stimulus_gen5;
    144                                              		
    145                                              
    146                                              
    147                                              
    148                                              		//Correct Count and Error Count Display
    149             1                          1     		$display("At End of Simulation: Correct Count = %0d, Error Count = %0d", correct_count, error_count);
    150             1                          1     		@(negedge clk); $stop;
    150             2                          1     
    151                                              
    152                                              	end
    153                                              
    154                                              
    155                                              
    156                                              
    157                                              
    158                                              	///////////////////////////////////////////////////////////////////// 		Tasks 		/////////////////////////////////////////////////////////////////////
    159                                              
    160                                              
    161                                              
    162                                              	//////////////////////////////Reset-Related//////////////////////////////
    163                                              
    164                                              	//Assert Reset
    165                                              	task assert_reset;
    166             1                          1     		rst_n = 0;
    167             1                          1     		sc.constraint_mode(0);
    168                                              
    169             1                          1     		@(negedge clk);
    170                                              	endtask
    171                                              
    172                                              	//TEST 0: Reset Asserted
    173                                              	task stimulus_gen_reset;
    174             1                          1     		for(int i=0; i<TESTS; i++) begin
    174             2                      10000     
    175                                              			assert(sc.randomize());
    176             1                      10000     			SS_n 		= sc.SS_n;
    177             1                      10000     			MOSI 		= sc.MOSI;
    178             1                      10000     			tx_valid 	= sc.tx_valid;
    179             1                      10000     			tx_data		= sc.tx_data;
    180                                              
    181             1                      10000     			check_reset;
    182             1                      10000     			@(negedge clk);
    183                                              		end
    184                                              	endtask
    185                                              
    186                                              	//CHECKER: Reset Asserted
    187                                              	task check_reset;
    188             1                      28471     		@(posedge clk);
    189                                              
    190                                              		if(rx_data !== 0) begin
    191             1                    ***0***     			$display("ERROR: (Reset Asserted) -> Output -rx_data- equals %0h, but should equal 0 \t\t--time: %0t", rx_data, $time);
    192             1                    ***0***     			error_count++;
    193                                              		end
    194             1                      28470     		else correct_count++;
    195                                              
    196                                              		if(rx_valid !== 0) begin
    197             1                    ***0***     			$display("ERROR: (Reset Asserted) -> Output -rx_valid- equals %0h, but should equal 0 \t\t--time: %0t", rx_valid, $time);
    198             1                    ***0***     			error_count++;
    199                                              		end
    200             1                      28470     		else correct_count++;
    201                                              
    202                                              		if(MISO !== 0) begin
    203             1                    ***0***     			$display("ERROR: (Reset Asserted) -> Output -MISO- equals %0h, but should equal 0 \t\t--time: %0t", MISO, $time);
    204             1                    ***0***     			error_count++;
    205                                              		end
    206             1                      28470     		else correct_count++;
    207                                              	endtask
    208                                              
    209                                              	//Deassert Reset
    210                                              	task deassert_reset;
    211             1                          1     		rst_n = 1;
    212             1                          1     		SS_n = 1;
    213             1                          1     		sc.constraint_mode(1);
    214                                              
    215             1                          1     		@(negedge clk);
    216                                              	endtask
    217                                              
    218                                              
    219                                              
    220                                              
    221                                              
    222                                              
    223                                              
    224                                              	///////////////////////Preparing Possible Sequences for Slave (IDLE to IDLE)///////////////////////
    225                                              
    226                                              
    227                                              	/*
    228                                              	To simulate RAM's behavior 	- Inputs are driven @(posedge clk)
    229                                              								- tx_valid and tx_data do not change until rx_valid is high
    230                                              	*/
    231                                              	int rx_high_since = 0;
    232             1                     792890     	always @(posedge clk) begin
    233                                              		assert(sc.randomize());
    234                                              		if(cs_DUT == READ_DATA) begin
    235             1                     203949     			rx_high_since++;
    236             1                     124071     			if(rx_high_since > ADDR_SIZE - 1) tx_valid <= 1;
    237                                              			else begin
    238             1                      79878     				tx_valid <= 0;
    239             1                      79878     				tx_data <= sc.tx_data;
    240                                              			end
    241                                              		end
    242                                              		else begin
    243             1                      11535     			if(ns_DUT == READ_DATA) tx_valid <= 0;
    244             1                     577406     			else tx_valid <= sc.tx_valid;
    245             1                     588941     			rx_high_since <= 0;
    246             1                     588941     			tx_data <= sc.tx_data;
    247                                              		end
    248                                              	end
    249                                              
    250                                              	//Marks the beginning and ending of all sequences
    251                                              	task start_seq;
    252             1                      50000     		SS_n = 0;
    253             1                      50000     		@(negedge clk);
    254                                              	endtask
    255                                              
    256                                              	task end_seq;
    257             1                      37457     		@(negedge clk);
    258             1                      37457     		SS_n = 1;
    259             1                      37457     		@(negedge clk);
    260                                              	endtask
    261                                              
    262                                              
    263                                              
    264                                              
    265                                              	//WRITE_ADD -> MOSI: 000
    266                                              	task write_add_seq;
    267             1                      12494     		start_seq;
    268             1                      12494     		MOSI = 0;
    269             1                      24988     		repeat(2) @(negedge clk);
    269             2                      24988     
    270             1                      12494     		for(int i=0; i<ADDR_SIZE; i++) begin
    270             2                      99952     
    271             1                      99952     			@(negedge clk);
    272                                              			assert(sc.randomize());
    273             1                      99952     			MOSI = sc.MOSI;
    274                                              		end
    275             1                      12494     		end_seq;
    276                                              	endtask
    277                                              
    278                                              	//WRITE_DATA -> MOSI: 001
    279                                              	task write_data_seq;
    280             1                      12465     		start_seq;
    281             1                      12465     		MOSI = 0;
    282             1                      24930     		repeat(2) @(negedge clk);
    282             2                      24930     
    283             1                      12465     		MOSI = 1;
    284             1                      12465     		for(int i=0; i<ADDR_SIZE; i++) begin
    284             2                      99720     
    285             1                      99720     			@(negedge clk);
    286                                              			assert(sc.randomize());
    287             1                      99720     			MOSI = sc.MOSI;
    288                                              		end
    289             1                      12465     		end_seq;
    290                                              	endtask
    291                                              
    292                                              	//READ_ADD -> MOSI: 110
    293                                              	task read_add_seq;
    294             1                      12498     		start_seq;
    295             1                      12498     		MOSI = 1;
    296             1                      24996     		repeat(2) @(negedge clk);
    296             2                      24996     
    297             1                      12498     		MOSI = 0;
    298             1                      12498     		for(int i=0; i<ADDR_SIZE; i++) begin
    298             2                      99984     
    299             1                      99984     			@(negedge clk);
    300                                              			assert(sc.randomize());
    301             1                      99984     			MOSI = sc.MOSI;
    302                                              		end
    303             1                      12498     		end_seq;
    304                                              	endtask
    305                                              
    306                                              	//READ_DATA -> MOSI: 111
    307                                              	task read_data_seq;
    308             1                      12543     		start_seq;
    309             1                      12543     		MOSI = 1;
    310             1                      25086     		repeat(2) @(negedge clk);
    310             2                      25086     
    311             1                      12543     		for(int i=0; i<ADDR_SIZE; i++) begin
    311             2                     100344     
    312             1                     100344     			@(negedge clk);
    313                                              			assert(sc.randomize());
    314             1                     100344     			MOSI = sc.MOSI;
    315                                              		end
    316             1                      12543     		@(negedge clk);
    317                                              
    318             1                     112887     		repeat (9) @(negedge clk);
    318             2                     112887     
    319                                              
    320             1                      12543     		SS_n = 1;
    321             1                      12543     		@(negedge clk);
    322                                              	endtask
    323                                              
    324                                              
    325                                              
    326                                              
    327                                              	//////////////////////////////Stimulus Generation//////////////////////////////
    328                                              
    329                                              
    330                                              	//TEST 1: Normal Write Operation
    331                                              	task stimulus_gen1;
    332             1                          1     		sc.constraint_mode(0);
    333             1                          1     		for(int i=0; i<TESTS; i++) begin
    333             2                      10000     
    334             1                      10000     			write_add_seq;
    335             1                      10000     			write_data_seq;
    336                                              		end
    337                                              	endtask
    338                                              
    339                                              
    340                                              
    341                                              	//TEST 2: Normal Read Operation
    342                                              	task stimulus_gen2;
    343             1                          1     		sc.constraint_mode(0);
    344             1                          1     		for(int i=0; i<TESTS; i++) begin
    344             2                      10000     
    345             1                      10000     			read_add_seq;
    346             1                      10000     			read_data_seq;
    347                                              		end
    348                                              	endtask
    349                                              
    350                                              
    351                                              
    352                                              	//TEST 3: Randomization of Different Scenarios
    353                                              	task stimulus_gen3;
    354             1                          1     		sc.constraint_mode(0);
    355             1                          1     		for(int i=0; i<TESTS; i++) begin
    355             2                      10000     
    356                                              			assert(sc.randomize());
    357                                              			case(sc.selector_seq)
    358             1                       2494     				0: write_add_seq;
    359             1                       2465     				1: write_data_seq;
    360             1                       2498     				2: read_add_seq;
    361             1                       2543     				3: read_data_seq;
    362                                              			endcase
    363                                              		end
    364                                              	endtask
    365                                              
    366                                              
    367                                              
    368                                              	//Test 4: Randomization of all variables - with Constraints
    369                                              	/*task stimulus_gen4;
    370                                              		sc.constraint_mode(1);
    371                                              		for(int i=0; i<TESTS; i++) begin
    372                                              			assert(sc.randomize());
    373                                              			tx_valid = sc.tx_valid;
    374                                              			tx_data	 = sc.tx_data;
    375                                              			for(int i=0; i<ADDR_SIZE+2; i++) begin
    376                                              				assert(sc.randomize());
    377                                              				rst_n 	 = sc.rst_n;
    378                                              				SS_n 	 = sc.SS_n;
    379                                              				MOSI 	 = sc.MOSI;
    380                                              				@(negedge clk);
    381                                              			end
    382                                              		end
    383                                              	endtask*/
    384                                              
    385                                              
    386                                              	//Test 4: Randomization of all variables - with Constraints
    387                                              	task stimulus_gen4;
    388             1                          1     		sc.constraint_mode(1);
    389             1                          1     		for(int i=0; i<TESTS; i++) begin
    389             2                      10000     
    390                                              			assert(sc.randomize());
    391             1                      10000     			rst_n 	 = sc.rst_n;
    392             1                      10000     			SS_n 	 = sc.SS_n;
    393             1                      10000     			MOSI 	 = sc.MOSI;
    394                                              
    395             1                      10000     			@(negedge clk);
    396                                              		end
    397                                              	endtask
    398                                              
    399                                              
    400                                              	//Test 5: Randomization of all variables - No Constraints
    401                                              	task stimulus_gen5;
    402             1                          1     		sc.constraint_mode(0);
    403             1                          1     		for(int i=0; i<TESTS; i++) begin
    403             2                      10000     
    404                                              			assert(sc.randomize());
    405             1                      10000     			rst_n 	 = sc.rst_n;
    406             1                      10000     			SS_n 	 = sc.SS_n;
    407             1                      10000     			MOSI 	 = sc.MOSI;
    408                                              
    409             1                      10000     			@(negedge clk);
    410                                              		end
    411                                              	endtask
    412                                              
    413                                              
    414                                              
    415                                              
    416                                              	//////////////////////////////Checking Results//////////////////////////////
    417                                              
    418                                              	//CHECKER:
    419                                              
    420             1                     794780     	always @(negedge clk or negedge rst_n) begin
    421             1                      18471     		if(~rst_n) check_reset;
    422                                              		else begin
    423             1                     776309     			check_rx_valid;
    424             1                     776309     			check_MISO;
    425             1                      48367     			if(rx_valid) check_rx_data;
    426                                              		end
    427                                              	end
    428                                              
    429                                              	task check_rx_valid;
    430                                              		if(rx_valid !== rx_valid_exp) begin
    431             1                    ***0***     			$display("ERROR: Output -rx_valid- equals %0h, but should equal %0h \t\t--time: %0t", rx_valid, rx_valid_exp, $time);
    432             1                    ***0***     			error_count++;
    433                                              		end
    434             1                     776309     		else correct_count++;
    435                                              	endtask
    436                                              
    437                                              	task check_rx_data;
    438                                              		if(rx_data !== rx_data_exp) begin
    439             1                    ***0***     			$display("ERROR: Output -rx_data- equals %0h, but should equal %0h \t\t--time: %0t", rx_data, rx_data_exp, $time);
    440             1                    ***0***     			error_count++;
    441                                              		end
    442             1                      48367     		else correct_count++;
    443                                              	endtask
    444                                              
    445                                              	task check_MISO;
    446                                              		if(MISO !== MISO_exp) begin
    447             1                    ***0***     			$display("ERROR: Output -MISO- equals %0h, but should equal %0h \t\t--time: %0t", MISO, MISO_exp, $time);
    448             1                    ***0***     			error_count++;
    449                                              		end
    450             1                     776309     		else correct_count++;
    451                                              	endtask
    452                                              
    453                                              
    454                                              
    455                                              
    456                                              
    457                                              
    458                                              	//////////////////////////////Functional Coverage Related//////////////////////////////
    459                                              
    460                                              
    461                                              	//Exporting Signals to Class -> To be included in coverpoints
    462             1                     792890     	always @(negedge clk) begin
    463                                              		//sc.rx_valid = rx_valid;
    464             1                     792890     		sc.rx_data 	= rx_data;
    465             1                     792890     		sc.cs 		= cs_DUT;
    466                                              	end
    467                                              
    468                                              	//Sampling of Covergroup
    469             1                     792891     	always @(posedge clk) sc.slave_cg.sample();
    469             2                     792890     

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                        298       157       141    52.68%

================================Toggle Details================================

Toggle Coverage for instance /slave_tb --

                                              Node      1H->0L      0L->1H                          "Coverage"
                                              ---------------------------------------------------------------
                                              MISO           1           1                              100.00 
                                          MISO_exp           1           1                              100.00 
                                              MOSI           1           1                              100.00 
                                              SS_n           1           1                              100.00 
                                               clk           1           1                              100.00 
                               correct_count[0-19]           1           1                              100.00 
                                 correct_count[20]           0           1                               50.00 
                              correct_count[21-31]           0           0                                0.00 
                                            cs_DUT               ENUM type       Value       Count 
                                                                      IDLE       20002      100.00 
                                                                 READ_DATA           1      100.00 
                                                                  READ_ADD           1      100.00 
                                                                   CHK_CMD       20002      100.00 
                                                                     WRITE       20000      100.00 
                                                                   WAIT_WR       20000      100.00 
                                                                   WAIT_RD           2      100.00 
                                                                  WAIT_RD2           2      100.00 
                                             cs_gm               ENUM type       Value       Count 
                                                                     IDLE_       20002      100.00 
                                                                  CHK_CMD_       20002      100.00 
                                                                    WRITE_       20000      100.00 
                                                                 READ_ADD_           1      100.00 
                                                                READ_DATA_           1      100.00 
                                                                  WAIT_WR_       20000      100.00 
                                                                  WAIT_RD_           2      100.00 
                                                                 WAIT_RD2_           2      100.00 
                                 error_count[0-31]           0           0                                0.00 
                                            ns_DUT               ENUM type       Value       Count 
                                                                      IDLE       22497      100.00 
                                                                 READ_DATA           1      100.00 
                                                                  READ_ADD           1      100.00 
                                                                   CHK_CMD       22495      100.00 
                                                                     WRITE       20000      100.00 
                                                                   WAIT_WR       20001      100.00 
                                                                   WAIT_RD        9974      100.00 
                                                                  WAIT_RD2           2      100.00 
                                             ns_gm               ENUM type       Value       Count 
                                                                     IDLE_       22497      100.00 
                                                                  CHK_CMD_       22495      100.00 
                                                                    WRITE_       20000      100.00 
                                                                 READ_ADD_           1      100.00 
                                                                READ_DATA_           1      100.00 
                                                                  WAIT_WR_       20001      100.00 
                                                                  WAIT_RD_        9974      100.00 
                                                                 WAIT_RD2_           2      100.00 
                                             rst_n           1           1                              100.00 
                                      rx_data[0-9]           1           1                              100.00 
                                  rx_data_exp[0-9]           1           1                              100.00 
                                rx_high_since[0-4]           1           1                              100.00 
                               rx_high_since[5-31]           0           0                                0.00 
                                          rx_valid           1           1                              100.00 
                                      rx_valid_exp           1           1                              100.00 
                                      tx_data[0-7]           1           1                              100.00 
                                          tx_valid           1           1                              100.00 

Total Node Count     =        165 
Toggled Node Count   =         94 
Untoggled Node Count =         71 

Toggle Coverage      =      52.68% (157 of 298 bins)

=================================================================================
=== Instance: /slave_pkg
=== Design Unit: work.slave_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         11        na        na        na
            Covergroup Bins         41        41         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /slave_pkg/slave_class/slave_class__1/slave_cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    41         41          -                      
    missing/total bins:                                     0         41          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint tx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cs_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                18         18          -                      
        missing/total bins:                                 0         18          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rst_n_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_tx_read                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_tx_valid_data                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_MOSI_SS_rst                           100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_rst_states                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_SS_states                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/slave_pkg::slave_class::slave_class__1::slave_cg  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    41         41          -                      
    missing/total bins:                                     0         41          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint tx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin Corners                                     14330          1          -    Covered              
        bin low_high                                      148          1          -    Covered              
        bin high_low                                      128          1          -    Covered              
    Coverpoint cs_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                18         18          -                      
        missing/total bins:                                 0         18          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin IDLE_to_other                           0                     -    ZERO                 
        illegal_bin CHK_to_other                            0                     -    ZERO                 
        illegal_bin WAIT_RD_to_other                        0                     -    ZERO                 
        bin States[IDLE]                                75645          1          -    Covered              
        bin States[READ_DATA]                          203958          1          -    Covered              
        bin States[READ_ADD]                           105568          1          -    Covered              
        bin States[CHK_CMD]                             59506          1          -    Covered              
        bin States[WRITE]                              263445          1          -    Covered              
        bin States[WAIT_WR]                             28516          1          -    Covered              
        bin States[WAIT_RD]                             29154          1          -    Covered              
        bin States[WAIT_RD2]                            27097          1          -    Covered              
        bin chk_to_all                                  59506          1          -    Covered              
        bin rd_add_data                                 10387          1          -    Covered              
        bin wr_add_data                                 23132          1          -    Covered              
        bin rd_to_wr[READ_ADD=>IDLE=>CHK_CMD=>WAIT_WR=>WRITE] 
                                                          759          1          -    Covered              
        bin rd_to_wr[READ_DATA=>IDLE=>CHK_CMD=>WAIT_WR=>WRITE] 
                                                          758          1          -    Covered              
        bin wr_to_rd[WRITE=>IDLE=>CHK_CMD=>WAIT_RD=>WAIT_RD2=>READ_ADD] 
                                                          838          1          -    Covered              
        bin wr_to_rd[WRITE=>IDLE=>CHK_CMD=>WAIT_RD=>WAIT_RD2=>READ_DATA] 
                                                          775          1          -    Covered              
        bin rd_wr_rd                                      192          1          -    Covered              
        bin wr_rd_wr[WRITE=>IDLE=>CHK_CMD=>WAIT_RD=>WAIT_RD2=>READ_ADD[*9]=>IDLE=>CHK_CMD=>WAIT_WR=>WRITE] 
                                                          426          1          -    Covered              
        bin wr_rd2_wr[WRITE=>IDLE=>CHK_CMD=>WAIT_RD=>WAIT_RD2=>READ_DATA[*18]=>IDLE=>CHK_CMD=>WAIT_WR=>WRITE] 
                                                          382          1          -    Covered              
    Coverpoint rst_n_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    391862          1          -    Covered              
        bin auto[1]                                    401028          1          -    Covered              
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    401132          1          -    Covered              
        bin auto[1]                                    391758          1          -    Covered              
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    396733          1          -    Covered              
        bin auto[1]                                    396157          1          -    Covered              
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    398290          1          -    Covered              
        bin auto[1]                                    394600          1          -    Covered              
    Cross cross_tx_read                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin tx_read                                  5015          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin tx_no_read2                       9315                     -    Occurred             
            ignore_bin tx_no_read1                       1895                     -    Occurred             
    Cross cross_tx_valid_data                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin tx_val_data                              6705          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin tx_inv                            7625                     -    Occurred             
    Cross cross_MOSI_SS_rst                           100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>               98283          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>               97557          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>              101825          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>               98492          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>               98427          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>               97491          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>              102493          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>               98322          1          -    Covered              
    Cross cross_rst_states                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin rst_all                                792889          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin rst_trans                        96155                     -    Occurred             
    Cross cross_SS_states                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin SS_all                                 792889          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin SS_trans                         96155                     -    Occurred             
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       6         6         0   100.00%

================================Statement Details================================

Statement Coverage for instance /slave_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File slave_pkg.sv
    1                                                package slave_pkg;
    2                                                
    3                                                	typedef enum logic [2:0] {IDLE, READ_DATA, READ_ADD, CHK_CMD, WRITE, WAIT_WR, WAIT_RD, WAIT_RD2} state_dut_e;
    4                                                	typedef enum logic [2:0] {IDLE_, CHK_CMD_, WRITE_, READ_ADD_, READ_DATA_, WAIT_WR_, WAIT_RD_, WAIT_RD2_} state_gm_e;
    5                                                
    6                                                	
    7                                                	class slave_class #(int ADDR_SIZE = 8);
    8                                                
    9                                                		//Parameters for Constraints and Covergroup
    10                                               		parameter ALL_ONES = 2*(ADDR_SIZE) - 1;
    11                                               		parameter ZERO = 0;
    12                                               
    13                                               		//Inputs to DUT
    14                                               		bit clk;
    15                                               		rand bit MOSI, SS_n, rst_n, tx_valid;
    16                                               		rand logic [ADDR_SIZE-1:0] tx_data;
    17                                               
    18                                               		//Signals Imported from Design
    19                                               		bit rx_valid;
    20                                               		logic [ADDR_SIZE+1:0] rx_data, rx_data_old;
    21                                               		state_dut_e cs;
    22                                               		//int rx_high_since = 0;
    23                                               
    24                                               		//For tx_data Constraint
    25                                               		rand bit [1:0] selector_tx;
    26                                               
    27                                               		//For Randomizing Sequences
    28                                               		rand bit [1:0] selector_seq;
    29                                               		rand bit [3:0] delay_SSn;
    30                                               
    31                                               		/*function void pre_randomize();
    32                                               			if( (cs == READ_DATA) && (rx_data == rx_data_old)) tx_valid = 1;
    33                                               			else if(cs == READ_DATA) tx_valid = 0;
    34                                               
    35                                               			//tx_valid = 1;
    36                                               		endfunction*/
    37                                               
    38                                               		constraint rst_c {
    39                                               			rst_n 			dist {0:=5, 	1:=95};							//rst_n is inactive most of the time
    40                                               		}
    41                                               
    42                                               		constraint SS_c {
    43                                               			SS_n 			dist {0:=90,	1:=10};							//SS_n is active most of the time
    44                                               		}
    45                                               
    46                                               		constraint tx {
    47                                               			tx_valid 		dist {0:=70, 	1:=30};							//tx_valid is inactive most of the time
    48                                               			selector_tx		dist {0:=30, 	1:=30,		[2:3]:=40};
    49                                               
    50                                               			if(selector_tx == 0) tx_data inside {ALL_ONES, ZERO};
    51                                               			if(selector_tx == 1) $countones(tx_data) == 1;
    52                                               		}
    53                                               
    54                                               
    55                                               		//To hold past values for pre_randomize conditions
    56                                               		/*function void post_randomize();
    57                                               			//rx_data_old  = rx_data;
    58                                               			if(cs == READ_DATA) rx_high_since++;
    59                                               			else rx_high_since = 0;
    60                                               		endfunction*/
    61                                               
    62                                               
    63                                               		covergroup slave_cg;
    64                                               
    65                                               			///////////////////////////////////////////////////////////////Coverpoints///////////////////////////////////////////////////////////////
    66                                               
    67                                               			tx_data_cp:		coverpoint tx_data{						//Rapid changes in tx_data might not be caught by MISO
    68                                               				bins Corners 	= {ZERO, ALL_ONES, 8'haa, 8'h55};	//Needs to be edited if a different ADDER_SIZE is used
    69                                               				bins low_high 	= (ZERO => ALL_ONES);
    70                                               				bins high_low	= (ALL_ONES => ZERO);
    71                                               			}
    72                                               
    73                                               			cs_cp: 			coverpoint cs{							//All states, and transitions must be covered
    74                                               				//States
    75                                               				bins States[] 		= {IDLE, READ_DATA, READ_ADD, CHK_CMD, WRITE, WAIT_WR, WAIT_RD, WAIT_RD2};
    76                                               				/*
    77                                               				bins Ctrl_States 	= {IDLE, CHK_CMD};
    78                                               				bins Write_States 	= {WRITE};
    79                                               				bins Read_States 	= {READ_DATA, READ_ADD};
    80                                               				bins hold_States 	= {WAIT_WR, WAIT_RD, WAIT_RD2};
    81                                               				*/
    82                                               
    83                                               				//Normal Transitions
    84                                               				bins chk_to_all			= (CHK_CMD => IDLE, WAIT_WR, WAIT_RD);
    85                                               				bins rd_add_data		= (READ_ADD => IDLE => CHK_CMD => WAIT_RD => WAIT_RD2 => READ_DATA);
    86                                               				bins wr_add_data 		= (WRITE => IDLE => CHK_CMD => WAIT_WR => WRITE);
    87                                               
    88                                               				//Illegal Transitions
    89                                               				illegal_bins IDLE_to_other 		= (IDLE => READ_DATA, READ_ADD, WRITE, WAIT_WR, WAIT_RD, WAIT_RD2);
    90                                               				illegal_bins CHK_to_other		= (CHK_CMD => WAIT_RD2, READ_DATA, READ_ADD, WRITE);
    91                                               				illegal_bins WAIT_RD_to_other 	= (WAIT_RD => READ_DATA, READ_ADD, CHK_CMD, WRITE, WAIT_WR);
    92                                               
    93                                               				//Different Scenarios
    94                                               				bins rd_to_wr[] 	= (READ_ADD, READ_DATA => IDLE => CHK_CMD => WAIT_WR => WRITE);
    95                                               				bins wr_to_rd[]		= (WRITE => IDLE => CHK_CMD => WAIT_RD => WAIT_RD2 => READ_ADD, READ_DATA);
    96                                               				bins rd_wr_rd 		= (READ_ADD => IDLE => CHK_CMD => WAIT_WR => WRITE[*10] => IDLE => CHK_CMD => WAIT_RD => WAIT_RD2 => READ_DATA);
    97                                               				bins wr_rd_wr[]		= (WRITE => IDLE => CHK_CMD => WAIT_RD => WAIT_RD2 => READ_ADD[*9] => IDLE => CHK_CMD => WAIT_WR => WRITE);
    98                                               				bins wr_rd2_wr[]	= (WRITE => IDLE => CHK_CMD => WAIT_RD => WAIT_RD2 => READ_DATA[*18] => IDLE => CHK_CMD => WAIT_WR => WRITE);
    99                                               			}
    100                                              
    101                                              			rst_n_cp: 		coverpoint rst_n;
    102                                              			SS_n_cp: 		coverpoint SS_n;
    103                                              			MOSI_cp: 		coverpoint MOSI;
    104                                              			tx_valid_cp: 	coverpoint tx_valid;
    105                                              			
    106                                              
    107                                              			///////////////////////////////////////////////////////////////Cross Coverage///////////////////////////////////////////////////////////////
    108                                              
    109                                              			cross_tx_read: 			cross tx_data_cp, cs_cp{
    110                                              				bins tx_read 			= binsof(tx_data_cp) && binsof(cs_cp.States) intersect {READ_ADD, READ_DATA};	//All corners of read data came along Read States
    111                                              				ignore_bins tx_no_read1	= binsof(tx_data_cp) && !binsof(cs_cp.States);
    112                                              				ignore_bins tx_no_read2 = binsof(tx_data_cp) && binsof(cs_cp.States) intersect {IDLE, CHK_CMD, WRITE, WAIT_WR, WAIT_RD, WAIT_RD2};
    113                                              			}
    114                                              
    115                                              			cross_tx_valid_data: 	cross tx_data_cp, tx_valid_cp{														//All corners of read data came along active tx_valid
    116                                              				bins tx_val_data 		= binsof(tx_data_cp) && binsof(tx_valid_cp) intersect {1};
    117                                              				ignore_bins tx_inv 		= binsof(tx_data_cp) && binsof(tx_valid_cp) intersect {0};
    118                                              			}
    119                                              
    120                                              			cross_MOSI_SS_rst: 			cross rst_n_cp, SS_n_cp, MOSI_cp;												//All combinations of Control Signals occured
    121                                              
    122                                              			cross_rst_states: 		cross cs_cp, rst_n_cp{
    123                                              				bins rst_all 			= binsof(cs_cp.States) && binsof(rst_n_cp);										//All states experienced rst_n effect (low/high)
    124                                              				ignore_bins rst_trans	= !binsof(cs_cp.States) && binsof(rst_n_cp);
    125                                              			}
    126                                              
    127                                              			cross_SS_states: 		cross cs_cp, SS_n_cp{
    128                                              				bins SS_all	 			= binsof(cs_cp.States) && binsof(SS_n_cp);										//All states experienced SS_n effect (low/high)
    129                                              				ignore_bins SS_trans	= !binsof(cs_cp.States) && binsof(SS_n_cp);
    130                                              			}
    131                                              		endgroup
    132                                              
    133                                              		function new(bit rst_n = 0, tx_valid = 0, SS_n = 1, MOSI = 0, logic [ADDR_SIZE-1:0] tx_data = 0);
    134    1 (CP=( 8))                          1     			this.rst_n 		= rst_n;
    135    1 (CP=( 8))                          1     			this.tx_valid	= tx_valid;
    136    1 (CP=( 8))                          1     			this.SS_n 		= SS_n;
    137    1 (CP=( 8))                          1     			this.MOSI	 	= MOSI;
    138    1 (CP=( 8))                          1     			this.tx_data	= tx_data;
    139                                              
    140    1 (CP=( 8))                          1     			slave_cg = new();


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /slave_pkg/slave_class/slave_class__1/slave_cg 
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    41         41          -                      
    missing/total bins:                                     0         41          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint tx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint cs_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                18         18          -                      
        missing/total bins:                                 0         18          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint rst_n_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_tx_read                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_tx_valid_data                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_MOSI_SS_rst                           100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_rst_states                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
    Cross cross_SS_states                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
 Covergroup instance \/slave_pkg::slave_class::slave_class__1::slave_cg  
                                                      100.00%        100          -    Covered              
    covered/total bins:                                    41         41          -                      
    missing/total bins:                                     0         41          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint tx_data_cp                             100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        bin Corners                                     14330          1          -    Covered              
        bin low_high                                      148          1          -    Covered              
        bin high_low                                      128          1          -    Covered              
    Coverpoint cs_cp                                  100.00%        100          -    Covered              
        covered/total bins:                                18         18          -                      
        missing/total bins:                                 0         18          -                      
        % Hit:                                        100.00%        100          -                      
        illegal_bin IDLE_to_other                           0                     -    ZERO                 
        illegal_bin CHK_to_other                            0                     -    ZERO                 
        illegal_bin WAIT_RD_to_other                        0                     -    ZERO                 
        bin States[IDLE]                                75645          1          -    Covered              
        bin States[READ_DATA]                          203958          1          -    Covered              
        bin States[READ_ADD]                           105568          1          -    Covered              
        bin States[CHK_CMD]                             59506          1          -    Covered              
        bin States[WRITE]                              263445          1          -    Covered              
        bin States[WAIT_WR]                             28516          1          -    Covered              
        bin States[WAIT_RD]                             29154          1          -    Covered              
        bin States[WAIT_RD2]                            27097          1          -    Covered              
        bin chk_to_all                                  59506          1          -    Covered              
        bin rd_add_data                                 10387          1          -    Covered              
        bin wr_add_data                                 23132          1          -    Covered              
        bin rd_to_wr[READ_ADD=>IDLE=>CHK_CMD=>WAIT_WR=>WRITE] 
                                                          759          1          -    Covered              
        bin rd_to_wr[READ_DATA=>IDLE=>CHK_CMD=>WAIT_WR=>WRITE] 
                                                          758          1          -    Covered              
        bin wr_to_rd[WRITE=>IDLE=>CHK_CMD=>WAIT_RD=>WAIT_RD2=>READ_ADD] 
                                                          838          1          -    Covered              
        bin wr_to_rd[WRITE=>IDLE=>CHK_CMD=>WAIT_RD=>WAIT_RD2=>READ_DATA] 
                                                          775          1          -    Covered              
        bin rd_wr_rd                                      192          1          -    Covered              
        bin wr_rd_wr[WRITE=>IDLE=>CHK_CMD=>WAIT_RD=>WAIT_RD2=>READ_ADD[*9]=>IDLE=>CHK_CMD=>WAIT_WR=>WRITE] 
                                                          426          1          -    Covered              
        bin wr_rd2_wr[WRITE=>IDLE=>CHK_CMD=>WAIT_RD=>WAIT_RD2=>READ_DATA[*18]=>IDLE=>CHK_CMD=>WAIT_WR=>WRITE] 
                                                          382          1          -    Covered              
    Coverpoint rst_n_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    391862          1          -    Covered              
        bin auto[1]                                    401028          1          -    Covered              
    Coverpoint SS_n_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    401132          1          -    Covered              
        bin auto[1]                                    391758          1          -    Covered              
    Coverpoint MOSI_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    396733          1          -    Covered              
        bin auto[1]                                    396157          1          -    Covered              
    Coverpoint tx_valid_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                    398290          1          -    Covered              
        bin auto[1]                                    394600          1          -    Covered              
    Cross cross_tx_read                               100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin tx_read                                  5015          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin tx_no_read2                       9315                     -    Occurred             
            ignore_bin tx_no_read1                       1895                     -    Occurred             
    Cross cross_tx_valid_data                         100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin tx_val_data                              6705          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin tx_inv                            7625                     -    Occurred             
    Cross cross_MOSI_SS_rst                           100.00%        100          -    Covered              
        covered/total bins:                                 8          8          -                      
        missing/total bins:                                 0          8          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1],auto[1]>               98283          1          -    Covered              
            bin <auto[0],auto[1],auto[1]>               97557          1          -    Covered              
            bin <auto[1],auto[0],auto[1]>              101825          1          -    Covered              
            bin <auto[0],auto[0],auto[1]>               98492          1          -    Covered              
            bin <auto[1],auto[1],auto[0]>               98427          1          -    Covered              
            bin <auto[0],auto[1],auto[0]>               97491          1          -    Covered              
            bin <auto[1],auto[0],auto[0]>              102493          1          -    Covered              
            bin <auto[0],auto[0],auto[0]>               98322          1          -    Covered              
    Cross cross_rst_states                            100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin rst_all                                792889          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin rst_trans                        96155                     -    Occurred             
    Cross cross_SS_states                             100.00%        100          -    Covered              
        covered/total bins:                                 1          1          -                      
        missing/total bins:                                 0          1          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin SS_all                                 792889          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin SS_trans                         96155                     -    Occurred             

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/slave_tb/DUT/slave_sva_inst/cover_reset_asserted 
                                         slave_sva Verilog  SVA  slave_sva.sv(182)
                                                                              15504 Covered   
/slave_tb/DUT/slave_sva_inst/cover_SS_inactive 
                                         slave_sva Verilog  SVA  slave_sva.sv(185)
                                                                              51426 Covered   
/slave_tb/DUT/slave_sva_inst/cover_CHK_first 
                                         slave_sva Verilog  SVA  slave_sva.sv(188)
                                                                              51399 Covered   
/slave_tb/DUT/slave_sva_inst/cover_CHK_WR 
                                         slave_sva Verilog  SVA  slave_sva.sv(191)
                                                                              25370 Covered   
/slave_tb/DUT/slave_sva_inst/cover_CHK_RD 
                                         slave_sva Verilog  SVA  slave_sva.sv(194)
                                                                              25422 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MOSI_wr 
                                         slave_sva Verilog  SVA  slave_sva.sv(197)
                                                                              25116 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MOSI_rd 
                                         slave_sva Verilog  SVA  slave_sva.sv(200)
                                                                              25162 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MOSI_rd_add 
                                         slave_sva Verilog  SVA  slave_sva.sv(203)
                                                                              185821 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MOSI_rd_data 
                                         slave_sva Verilog  SVA  slave_sva.sv(206)
                                                                              93782 Covered   
/slave_tb/DUT/slave_sva_inst/cover_no_add_add 
                                         slave_sva Verilog  SVA  slave_sva.sv(209)
                                                                              11247 Covered   
/slave_tb/DUT/slave_sva_inst/cover_no_data_data 
                                         slave_sva Verilog  SVA  slave_sva.sv(212)
                                                                              11275 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx    slave_sva Verilog  SVA  slave_sva.sv(215)
                                                                              47516 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_wr slave_sva Verilog  SVA  slave_sva.sv(218)
                                                                              25519 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_rd_add 
                                         slave_sva Verilog  SVA  slave_sva.sv(221)
                                                                              11562 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_rd_data 
                                         slave_sva Verilog  SVA  slave_sva.sv(224)
                                                                              11284 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_tx slave_sva Verilog  SVA  slave_sva.sv(227)
                                                                              11281 Covered   
/slave_tb/DUT/slave_sva_inst/cover_rx_chk 
                                         slave_sva Verilog  SVA  slave_sva.sv(230)
                                                                              204625 Covered   
/slave_tb/DUT/slave_sva_inst/cover_tx    slave_sva Verilog  SVA  slave_sva.sv(233)
                                                                              11275 Covered   
/slave_tb/DUT/slave_sva_inst/cover_MISO_rd_only 
                                         slave_sva Verilog  SVA  slave_sva.sv(236)
                                                                              531474 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 19

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/slave_tb/stimulus_gen_reset/#anonblk#42774786#174#4#/#ublk#42774786#174/immed__175
                     slave_tb.sv(175)                   0          1
/slave_tb/#ublk#42774786#232/immed__233
                     slave_tb.sv(233)                   0          1
/slave_tb/write_add_seq/#anonblk#42774786#270#4#/#ublk#42774786#270/immed__272
                     slave_tb.sv(272)                   0          1
/slave_tb/write_data_seq/#anonblk#42774786#284#4#/#ublk#42774786#284/immed__286
                     slave_tb.sv(286)                   0          1
/slave_tb/read_add_seq/#anonblk#42774786#298#4#/#ublk#42774786#298/immed__300
                     slave_tb.sv(300)                   0          1
/slave_tb/read_data_seq/#anonblk#42774786#311#4#/#ublk#42774786#311/immed__313
                     slave_tb.sv(313)                   0          1
/slave_tb/stimulus_gen3/#anonblk#42774786#355#4#/#ublk#42774786#355/immed__356
                     slave_tb.sv(356)                   0          1
/slave_tb/stimulus_gen4/#anonblk#42774786#389#4#/#ublk#42774786#389/immed__390
                     slave_tb.sv(390)                   0          1
/slave_tb/stimulus_gen5/#anonblk#42774786#403#4#/#ublk#42774786#403/immed__404
                     slave_tb.sv(404)                   0          1
/slave_tb/DUT/slave_sva_inst/assertion_reset_asserted
                     slave_sva.sv(181)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_SS_inactive
                     slave_sva.sv(184)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_CHK_first
                     slave_sva.sv(187)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_CHK_WR
                     slave_sva.sv(190)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_CHK_RD
                     slave_sva.sv(193)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MOSI_wr
                     slave_sva.sv(196)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MOSI_rd
                     slave_sva.sv(199)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MOSI_rd_add
                     slave_sva.sv(202)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MOSI_rd_data
                     slave_sva.sv(205)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_no_add_add
                     slave_sva.sv(208)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_no_data_data
                     slave_sva.sv(211)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx
                     slave_sva.sv(214)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_wr
                     slave_sva.sv(217)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_rd_add
                     slave_sva.sv(220)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_rd_data
                     slave_sva.sv(223)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_tx
                     slave_sva.sv(226)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_rx_chk
                     slave_sva.sv(229)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_tx
                     slave_sva.sv(232)                  0          1
/slave_tb/DUT/slave_sva_inst/assertion_MISO_rd_only
                     slave_sva.sv(235)                  0          1

Total Coverage By Instance (filtered view): 94.48%

